digraph "TradableItem.GetCurrentPrice"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,fontname=Consolas fontsize=10 style=filled height=0.2 width=0.4 margin=0.1];
  rankdir="RL";
  Node1 [id="Node000001",label="TradableItem.GetCurrentPrice",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="현재 가격을 반환합니다. 아직 초기화되지 않았다면 RecalculatePrice()를 호출하여 basePrice ± fluctuation 범위에서 랜덤으로 결정한 후,..."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TradeManager.GetTotalPrice",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_trade_manager.html#aef559d6f0f6b8529909ae3db8def5934",tooltip="지정된 아이템과 수량에 대한 총 가격을 계산합니다."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TradeManager.BuyItem",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_trade_manager.html#a539ec72e8f406214e1424e963641c9ca",tooltip="지정된 아이템을 구매하는 메서드입니다. 구매가 가능하면 아이템을 창고에 추가하고, 플레이어의 COMA를 차감합니다."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="TradeManager.SellItem",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_trade_manager.html#a3d33a8cd0cf2452b8442bdcfb97dd6c9",tooltip="지정된 아이템을 판매하는 메서드입니다. 창고에 충분한 아이템이 있는 경우 판매하고, 판매 금액만큼 플레이어의 COMA를 증가시킵니다."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="InventoryItemUI.Setup",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_inventory_item_u_i.html#acd038c55a9fc872068093d0779a0e106",tooltip="StoredItem 데이터를 받아 UI를 초기화합니다."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="InventoryUI.PopulateInventory",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_inventory_u_i.html#af02748a53515b07d308d2a3d5907c365",tooltip="Storage에 저장된 모든 아이템을 기반으로 UI를 동적으로 생성합니다. 기존의 아이템 UI를 제거한 후 새롭게 생성하여 중복 생성을 방지합니다."];
}
