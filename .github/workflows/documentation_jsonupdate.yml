name: Build and Push Doxygen Docs and JSON

on:
  push:
    branches:
      - main
      - Serializing

permissions:
  contents: write

jobs:
  build-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install Doxygen
        run: sudo apt-get install doxygen -y

      - name: Install Graphviz
        run: sudo apt-get install graphviz -y

      - name: Generate Doxygen documentation
        run: doxygen Doxyfile

      - name: Create combined documentation directory
        run: |
          mkdir -p ./docs/combined
          cp -r ./docs/html/* ./docs/combined/
          mkdir -p ./docs/combined/xml
          cp -r ./docs/xml/* ./docs/combined/xml/

      - name: Push to gh-pages branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/combined
          publish_branch: gh-pages
          force_orphan: true

  check-excel-changes:
    runs-on: ubuntu-latest
    needs: build-docs
    outputs:
      has_xlsx_changes: ${{ steps.check_excel.outputs.has_changes }}
    
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # Need to fetch HEAD and HEAD^ to compare

      - name: Check if Excel file was modified
        id: check_excel
        run: |
          echo "🔍 Checking for modified .xlsx files in DataSheet/"
          if git diff --name-only HEAD^ HEAD | grep -q '^DataSheet/.*\.xlsx'; then
            echo "Excel files were modified"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "🛑 No Excel changes detected."
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

  json-update:
    runs-on: ubuntu-latest
    needs: check-excel-changes
    if: needs.check-excel-changes.outputs.has_xlsx_changes == 'true'

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python packages
        run: pip install pandas openpyxl

      - name: Convert Excel to JSON
        run: python excel_to_json.py

      - name: Ensure StreamingAssets directory exists
        run: mkdir -p ./Assets/StreamingAssets

      - name: Copy JSON files to StreamingAssets
        run: cp -r json_output/*.json ./Assets/StreamingAssets/

      - name: Commit generated JSON to repository
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout main
          git add ./Assets/StreamingAssets/*.json
          git commit -m "Auto-update JSON files from Excel" || echo "No changes to commit"
          git push origin main