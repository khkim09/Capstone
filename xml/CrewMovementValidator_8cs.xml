<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="CrewMovementValidator_8cs" kind="file" language="C#">
    <compoundname>CrewMovementValidator.cs</compoundname>
    <innerclass refid="classCrewMovementValidator" prot="public">CrewMovementValidator</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using<sp/></highlight><highlight class="normal">System.Collections.Generic;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">System.Linq;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">UnityEngine;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="classCrewMovementValidator" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classCrewMovementValidator" kindref="compound">CrewMovementValidator</ref><sp/>:<sp/>MonoBehaviour</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>List&lt;Vector2Int&gt;<sp/>inspectorWalkable;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>HashSet&lt;Vector2Int&gt;<sp/>walkableTiles;<sp/></highlight><highlight class="comment">//<sp/>이동<sp/>가능한<sp/>타일<sp/>목록<sp/>(방/복도<sp/>점유<sp/>타일)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>List&lt;Room&gt;<sp/>rooms;<sp/></highlight><highlight class="comment">//<sp/>전체<sp/>방<sp/>리스트</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classCrewMovementValidator_1a81f36c4d99a75149fc7c0e5db33b7101" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCrewMovementValidator_1a81f36c4d99a75149fc7c0e5db33b7101" kindref="member">Initialize</ref>(List&lt;Room&gt;<sp/>allRooms)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>walkableTiles<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>HashSet&lt;Vector2Int&gt;();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rooms<sp/>=<sp/>allRooms;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="classRoom" kindref="compound">Room</ref><sp/>room<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>allRooms)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(Vector2Int<sp/>tile<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>room.<ref refid="classRoom_1a18ac2f2af25dbf2e6181db75eab061ae" kindref="member">GetOccupiedTiles</ref>())</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>walkableTiles.Add(tile);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inspectorWalkable<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;Vector2Int&gt;(walkableTiles);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classCrewMovementValidator_1a5d4caf53367c1f0d9ac691bfd9c553cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCrewMovementValidator_1a5d4caf53367c1f0d9ac691bfd9c553cc" kindref="member">IsTileWalkable</ref>(Vector2Int<sp/>tile)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>walkableTiles.Contains(tile);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classCrewMovementValidator_1a2601f8804be2724ebbc26651d3ee8de3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCrewMovementValidator_1a2601f8804be2724ebbc26651d3ee8de3" kindref="member">AreTilesConnected</ref>(Vector2Int<sp/>from,<sp/>Vector2Int<sp/>to)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRoom" kindref="compound">Room</ref><sp/>roomA<sp/>=<sp/><ref refid="classCrewMovementValidator_1ac4de44ee83f4831bc6f536c5f120f974" kindref="member">GetRoomAtTile</ref>(from);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRoom" kindref="compound">Room</ref><sp/>roomB<sp/>=<sp/><ref refid="classCrewMovementValidator_1ac4de44ee83f4831bc6f536c5f120f974" kindref="member">GetRoomAtTile</ref>(to);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(roomA<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>||<sp/>roomB<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>같은<sp/>방<sp/>내부</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(roomA<sp/>==<sp/>roomB)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>복도<sp/>&lt;-&gt;<sp/>복도<sp/>:<sp/>항상<sp/>이동<sp/>가능</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(roomA.<ref refid="classRoom_1af4b97c8e2306beda35f26f8803734eb5" kindref="member">roomType</ref><sp/>==<sp/>RoomType.Corridor<sp/>&amp;&amp;<sp/>roomB.<ref refid="classRoom_1af4b97c8e2306beda35f26f8803734eb5" kindref="member">roomType</ref><sp/>==<sp/>RoomType.Corridor)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>복도<sp/>&lt;-&gt;<sp/>방<sp/>:<sp/>방의<sp/>문<sp/>타일<sp/>위치에서만<sp/>이동<sp/>가능</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(roomA.<ref refid="classRoom_1af4b97c8e2306beda35f26f8803734eb5" kindref="member">roomType</ref><sp/>==<sp/>RoomType.Corridor<sp/>||<sp/>roomB.<ref refid="classRoom_1af4b97c8e2306beda35f26f8803734eb5" kindref="member">roomType</ref><sp/>==<sp/>RoomType.Corridor)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classCrewMovementValidator_1a5f57c030a16c4ecb73d0ceb9e31a82e6" kindref="member">CorridorRoomConnectionValid</ref>(roomA,<sp/>roomB,<sp/>from,<sp/>to);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>방<sp/>&lt;-&gt;<sp/>방<sp/>:<sp/>연결성<sp/>검사<sp/>(문<sp/>위치,<sp/>방향)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classCrewMovementValidator_1a22d0bc7e909e7090b18c4956d997da22" kindref="member">AreRoomsConnectedThroughDoors</ref>(roomA,<sp/>roomB,<sp/>from,<sp/>to);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classCrewMovementValidator_1ac4de44ee83f4831bc6f536c5f120f974" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="classRoom" kindref="compound">Room</ref><sp/><ref refid="classCrewMovementValidator_1ac4de44ee83f4831bc6f536c5f120f974" kindref="member">GetRoomAtTile</ref>(Vector2Int<sp/>tile)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>room<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>rooms)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(room.<ref refid="classRoom_1a18ac2f2af25dbf2e6181db75eab061ae" kindref="member">GetOccupiedTiles</ref>().Contains(tile))</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>room;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classCrewMovementValidator_1a5f57c030a16c4ecb73d0ceb9e31a82e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCrewMovementValidator_1a5f57c030a16c4ecb73d0ceb9e31a82e6" kindref="member">CorridorRoomConnectionValid</ref>(<ref refid="classRoom" kindref="compound">Room</ref><sp/>roomA,<sp/><ref refid="classRoom" kindref="compound">Room</ref><sp/>roomB,<sp/>Vector2Int<sp/>from,<sp/>Vector2Int<sp/>to)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>복도,<sp/>일반<sp/>방<sp/>설정</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRoom" kindref="compound">Room</ref><sp/>corridorRoom<sp/>=<sp/>roomA.roomType<sp/>==<sp/>RoomType.Corridor<sp/>?<sp/>roomA<sp/>:<sp/>roomB;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRoom" kindref="compound">Room</ref><sp/>normalRoom<sp/>=<sp/>roomA.roomType<sp/>==<sp/>RoomType.Corridor<sp/>?<sp/>roomB<sp/>:<sp/>roomA;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2Int<sp/>corridorPos<sp/>=<sp/>corridorRoom<sp/>==<sp/>roomA<sp/>?<sp/>from<sp/>:<sp/>to;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;DoorPosition&gt;<sp/>doors<sp/>=<sp/>normalRoom.GetRoomData().<ref refid="classRoomData_1a32d344538a3e29e053bad7a953f6d088" kindref="member">GetDoorPositionsWithDirection</ref>(normalRoom.<ref refid="classRoom_1ae14b08f3ba19cce81b077d6fefcb1fd5" kindref="member">GetCurrentLevel</ref>(),<sp/>normalRoom.<ref refid="classRoom_1ac5fe65688e08065e4e586bb25218ad8c" kindref="member">position</ref>,<sp/>normalRoom.<ref refid="classRoom_1ae1f89a83229215231d726691043898c6" kindref="member">currentRotation</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="structDoorPosition" kindref="compound">DoorPosition</ref><sp/>door<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>doors)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>이웃<sp/>타일</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2Int<sp/>expectedNeighbor<sp/>=<sp/>door.position<sp/>+<sp/><ref refid="classCrewMovementValidator_1a5530033ef41c14b2ab1a219cb8070e56" kindref="member">GetDirectionOffset</ref>(door.<ref refid="structDoorPosition_1a57a3b25d1cc64716f7ffb23cd1ac8752" kindref="member">direction</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expectedNeighbor<sp/>==<sp/>corridorPos)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classCrewMovementValidator_1a22d0bc7e909e7090b18c4956d997da22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCrewMovementValidator_1a22d0bc7e909e7090b18c4956d997da22" kindref="member">AreRoomsConnectedThroughDoors</ref>(<ref refid="classRoom" kindref="compound">Room</ref><sp/>roomA,<sp/><ref refid="classRoom" kindref="compound">Room</ref><sp/>roomB,<sp/>Vector2Int<sp/>from,<sp/>Vector2Int<sp/>to)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;DoorPosition&gt;<sp/>doorsA<sp/>=<sp/>roomA.GetRoomData().<ref refid="classRoomData_1a32d344538a3e29e053bad7a953f6d088" kindref="member">GetDoorPositionsWithDirection</ref>(roomA.<ref refid="classRoom_1ae14b08f3ba19cce81b077d6fefcb1fd5" kindref="member">GetCurrentLevel</ref>(),<sp/>roomA.<ref refid="classRoom_1ac5fe65688e08065e4e586bb25218ad8c" kindref="member">position</ref>,<sp/>roomA.<ref refid="classRoom_1ae1f89a83229215231d726691043898c6" kindref="member">currentRotation</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;DoorPosition&gt;<sp/>doorsB<sp/>=<sp/>roomB.GetRoomData().<ref refid="classRoomData_1a32d344538a3e29e053bad7a953f6d088" kindref="member">GetDoorPositionsWithDirection</ref>(roomB.<ref refid="classRoom_1ae14b08f3ba19cce81b077d6fefcb1fd5" kindref="member">GetCurrentLevel</ref>(),<sp/>roomB.<ref refid="classRoom_1ac5fe65688e08065e4e586bb25218ad8c" kindref="member">position</ref>,<sp/>roomB.<ref refid="classRoom_1ae1f89a83229215231d726691043898c6" kindref="member">currentRotation</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="structDoorPosition" kindref="compound">DoorPosition</ref><sp/>doorA<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>doorsA)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="structDoorPosition" kindref="compound">DoorPosition</ref><sp/>doorB<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>doorsB)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>조건1:<sp/>문<sp/>위치가<sp/>인접</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>positionMatch<sp/>=<sp/><ref refid="classCrewMovementValidator_1ad560faa51070588da01ffa0d87d70d87" kindref="member">DoorPositionMatch</ref>(doorA.<ref refid="structDoorPosition_1aa9b01dac11a0393895589472bb644d60" kindref="member">position</ref>,<sp/>doorA.<ref refid="structDoorPosition_1a57a3b25d1cc64716f7ffb23cd1ac8752" kindref="member">direction</ref>,<sp/>doorB.<ref refid="structDoorPosition_1aa9b01dac11a0393895589472bb644d60" kindref="member">position</ref>,<sp/>doorB.<ref refid="structDoorPosition_1a57a3b25d1cc64716f7ffb23cd1ac8752" kindref="member">direction</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>조건2:<sp/>문<sp/>방향이<sp/>서로<sp/>반대</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>directionMatch<sp/>=<sp/><ref refid="classCrewMovementValidator_1af4ce471bbcca45fef94ec82d9ac8de11" kindref="member">GetOppositeDoorDirection</ref>(doorA.<ref refid="structDoorPosition_1a57a3b25d1cc64716f7ffb23cd1ac8752" kindref="member">direction</ref>)<sp/>==<sp/>doorB.<ref refid="structDoorPosition_1a57a3b25d1cc64716f7ffb23cd1ac8752" kindref="member">direction</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(positionMatch<sp/>&amp;&amp;<sp/>directionMatch)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogError($</highlight><highlight class="stringliteral">&quot;{roomA},<sp/>{roomB}는<sp/>연결됨&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="classCrewMovementValidator_1ad560faa51070588da01ffa0d87d70d87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCrewMovementValidator_1ad560faa51070588da01ffa0d87d70d87" kindref="member">DoorPositionMatch</ref>(Vector2Int<sp/>doorPosA,<sp/>DoorDirection<sp/>dirA,<sp/>Vector2Int<sp/>doorPosB,<sp/>DoorDirection<sp/>dirB)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2Int<sp/>expectedNeighborForA<sp/>=<sp/>doorPosA<sp/>+<sp/><ref refid="classCrewMovementValidator_1a5530033ef41c14b2ab1a219cb8070e56" kindref="member">GetDirectionOffset</ref>(dirA);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2Int<sp/>expectedNeighborForB<sp/>=<sp/>doorPosB<sp/>+<sp/><ref refid="classCrewMovementValidator_1a5530033ef41c14b2ab1a219cb8070e56" kindref="member">GetDirectionOffset</ref>(dirB);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(doorPosA<sp/>==<sp/>expectedNeighborForB)<sp/>&amp;&amp;<sp/>(doorPosB<sp/>==<sp/>expectedNeighborForA);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classCrewMovementValidator_1a5530033ef41c14b2ab1a219cb8070e56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Vector2Int<sp/><ref refid="classCrewMovementValidator_1a5530033ef41c14b2ab1a219cb8070e56" kindref="member">GetDirectionOffset</ref>(DoorDirection<sp/>dir)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dir<sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DoorDirection.North<sp/>=&gt;<sp/>Vector2Int.up,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DoorDirection.East<sp/>=&gt;<sp/>Vector2Int.right,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DoorDirection.South<sp/>=&gt;<sp/>Vector2Int.down,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DoorDirection.West<sp/>=&gt;<sp/>Vector2Int.left,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_<sp/>=&gt;<sp/>Vector2Int.zero</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="classCrewMovementValidator_1af4ce471bbcca45fef94ec82d9ac8de11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>DoorDirection<sp/><ref refid="classCrewMovementValidator_1af4ce471bbcca45fef94ec82d9ac8de11" kindref="member">GetOppositeDoorDirection</ref>(DoorDirection<sp/>dir)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dir<sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DoorDirection.North<sp/>=&gt;<sp/>DoorDirection.South,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DoorDirection.South<sp/>=&gt;<sp/>DoorDirection.North,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DoorDirection.East<sp/>=&gt;<sp/>DoorDirection.West,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DoorDirection.West<sp/>=&gt;<sp/>DoorDirection.East,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_<sp/>=&gt;<sp/>dir</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Assets/Scripts/RTS/CrewMovementValidator.cs"/>
  </compounddef>
</doxygen>
