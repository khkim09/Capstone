<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="GridPlacer_8cs" kind="file" language="C#">
    <compoundname>GridPlacer.cs</compoundname>
    <innerclass refid="classGridPlacer" prot="public">GridPlacer</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using<sp/></highlight><highlight class="normal">System.Collections.Generic;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">UnityEngine;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="classGridPlacer" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGridPlacer" kindref="compound">GridPlacer</ref><sp/>:<sp/>MonoBehaviour</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13" refid="classGridPlacer_1aa3bed6db43534f52cebd7c29b19bd05e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>GameObject<sp/><ref refid="classGridPlacer_1aa3bed6db43534f52cebd7c29b19bd05e" kindref="member">tilePrefab</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classGridPlacer_1a7dd503c7d477fed2852aac32eebc8650" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Transform<sp/><ref refid="classGridPlacer_1a7dd503c7d477fed2852aac32eebc8650" kindref="member">gridTiles</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classGridPlacer_1ac21295d57c03c692520474f158d7b933" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classBlueprintShip" kindref="compound">BlueprintShip</ref><sp/><ref refid="classGridPlacer_1ac21295d57c03c692520474f158d7b933" kindref="member">targetBlueprintShip</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classGridPlacer_1a9392a71aaccfdb44c762bc15fd688591" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classShip" kindref="compound">Ship</ref><sp/><ref refid="classGridPlacer_1a9392a71aaccfdb44c762bc15fd688591" kindref="member">playerShip</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classGridPlacer_1aff764b1840caed8ae6c1ac2c6452d8b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>GameObject<sp/><ref refid="classGridPlacer_1aff764b1840caed8ae6c1ac2c6452d8b9" kindref="member">roomPrefab</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classGridPlacer_1ad38a51961019b2d29d57e76dd7d13380" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>GameObject<sp/><ref refid="classGridPlacer_1ad38a51961019b2d29d57e76dd7d13380" kindref="member">weaponPrefab</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>[SerializeField]<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>GameObject<sp/>previewRoomPrefab;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>[SerializeField]<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>GameObject<sp/>previewWeaponPrefab;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classGridPlacer_1a4bc6348d6038335298cb71251da42291" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>HashSet&lt;Vector2Int&gt;<sp/><ref refid="classGridPlacer_1a4bc6348d6038335298cb71251da42291" kindref="member">occupiedGridTiles</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>[SerializeField]<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Vector2Int<sp/>gridSize<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(60,<sp/>60);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>[SerializeField]<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Vector3<sp/>gridOrigin<sp/>=<sp/>Vector3.zero;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classGridPlacer_1aadc01e43a91ea0bf558b803759c47a7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGridPlacer_1aadc01e43a91ea0bf558b803759c47a7c" kindref="member">Start</ref>()</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGridPlacer_1a9392a71aaccfdb44c762bc15fd688591" kindref="member">playerShip</ref><sp/>=<sp/><ref refid="classGameManager" kindref="compound">GameManager</ref>.<ref refid="classGameManager_1ad3e717f4fb0f378b969f4457de81f23e" kindref="member">Instance</ref>.<ref refid="classGameManager_1af31b125ee50ee4ffee177b8357ef1f11" kindref="member">playerShip</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGridPlacer_1a1903444fb2ff22b35e6dab2bfea054de" kindref="member">GenerateTiles</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classGridPlacer_1a1903444fb2ff22b35e6dab2bfea054de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGridPlacer_1a1903444fb2ff22b35e6dab2bfea054de" kindref="member">GenerateTiles</ref>()</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>gridSize.x;<sp/>x++)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>gridSize.y;<sp/>y++)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>pos<sp/>=<sp/><ref refid="classGridPlacer_1a67a8b7577950ee0bbbed35781a1e984b" kindref="member">GetWorldPositionFromGrid</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2Int(x,<sp/>y));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameObject<sp/>tile<sp/>=<sp/>Instantiate(<ref refid="classGridPlacer_1aa3bed6db43534f52cebd7c29b19bd05e" kindref="member">tilePrefab</ref>,<sp/>pos,<sp/>Quaternion.identity,<sp/><ref refid="classGridPlacer_1a7dd503c7d477fed2852aac32eebc8650" kindref="member">gridTiles</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile.transform.localScale<sp/>=<sp/>Vector3.one<sp/>*<sp/>Constants.Grids.CellSize;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile.transform.position<sp/>+=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,<sp/>0,<sp/>17);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classGridPlacer_1a9afa06495a3d3c0f1c50aec2ca0166a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="classGridPlacer_1a9afa06495a3d3c0f1c50aec2ca0166a5" kindref="member">GridToWorldPosition</ref>(Vector2Int<sp/>gridPos)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gridOrigin<sp/>+<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3((gridPos.x<sp/>+<sp/>0.5f)<sp/>*<sp/>Constants.Grids.CellSize,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(gridPos.y<sp/>+<sp/>0.5f)<sp/>*<sp/>Constants.Grids.CellSize,<sp/>0f);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classGridPlacer_1a67a8b7577950ee0bbbed35781a1e984b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="classGridPlacer_1a67a8b7577950ee0bbbed35781a1e984b" kindref="member">GetWorldPositionFromGrid</ref>(Vector2Int<sp/>gridPos)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transform.TransformPoint(<ref refid="classGridPlacer_1a9afa06495a3d3c0f1c50aec2ca0166a5" kindref="member">GridToWorldPosition</ref>(gridPos));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classGridPlacer_1a170904c40cdc0b03cde40e50b3f23d50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector2Int<sp/><ref refid="classGridPlacer_1a170904c40cdc0b03cde40e50b3f23d50" kindref="member">WorldToGridPosition</ref>(Vector2<sp/>worldPos)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>local<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(worldPos.x,<sp/>worldPos.y,<sp/>0)<sp/>-<sp/>gridOrigin;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2Int(Mathf.FloorToInt(local.x<sp/>/<sp/>Constants.Grids.CellSize),</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mathf.FloorToInt(local.y<sp/>/<sp/>Constants.Grids.CellSize));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="classGridPlacer_1a256d47f047aeee7f201c3375ab82f131" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="classGridPlacer_1a256d47f047aeee7f201c3375ab82f131" kindref="member">GetCameraStartPositionToBP</ref>()</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>모든<sp/>배치<sp/>가능<sp/>오브젝트<sp/>가져오기</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;IBlueprintPlaceable&gt;<sp/>allPlaceables<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>방<sp/>가져오기</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classBlueprintRoom" kindref="compound">BlueprintRoom</ref>[]<sp/>allBPRooms<sp/>=<sp/><ref refid="classGridPlacer_1ac21295d57c03c692520474f158d7b933" kindref="member">targetBlueprintShip</ref>.GetComponentsInChildren&lt;<ref refid="classBlueprintRoom" kindref="compound">BlueprintRoom</ref>&gt;();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="classBlueprintRoom" kindref="compound">BlueprintRoom</ref><sp/>room<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>allBPRooms)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allPlaceables.Add(room);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>무기<sp/>가져오기</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classBlueprintWeapon" kindref="compound">BlueprintWeapon</ref>[]<sp/>allBPWeapons<sp/>=<sp/><ref refid="classGridPlacer_1ac21295d57c03c692520474f158d7b933" kindref="member">targetBlueprintShip</ref>.GetComponentsInChildren&lt;<ref refid="classBlueprintWeapon" kindref="compound">BlueprintWeapon</ref>&gt;();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="classBlueprintWeapon" kindref="compound">BlueprintWeapon</ref><sp/>weapon<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>allBPWeapons)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allPlaceables.Add(weapon);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>배치된<sp/>오브젝트<sp/>없으면<sp/>그리드<sp/>중앙</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allPlaceables.Count<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGridPlacer_1a67a8b7577950ee0bbbed35781a1e984b" kindref="member">GetWorldPositionFromGrid</ref>(gridSize<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>전체<sp/>타일<sp/>평균<sp/>위치<sp/>계산</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;Vector2Int&gt;<sp/>allTiles<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="interfaceIBlueprintPlaceable" kindref="compound">IBlueprintPlaceable</ref><sp/>placeable<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>allPlaceables)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allTiles.AddRange(placeable.<ref refid="interfaceIBlueprintPlaceable_1a018a87125833cd2bc8f09d7b0433bc33" kindref="member">GetOccupiedTiles</ref>());</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2<sp/>average<sp/>=<sp/>Vector2.zero;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(Vector2Int<sp/>tile<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>allTiles)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average<sp/>+=<sp/>(Vector2)tile;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average<sp/>/=<sp/>allTiles.Count;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGridPlacer_1a67a8b7577950ee0bbbed35781a1e984b" kindref="member">GetWorldPositionFromGrid</ref>(Vector2Int.RoundToInt(average));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classGridPlacer_1ab8195ca82a446385a2c7defcf3467d24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="classGridPlacer_1ab8195ca82a446385a2c7defcf3467d24" kindref="member">GetCameraStartPositionToOriginShip</ref>()</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;Room&gt;<sp/>allRooms<sp/>=<sp/><ref refid="classGridPlacer_1a9392a71aaccfdb44c762bc15fd688591" kindref="member">playerShip</ref>.<ref refid="classShip_1a8ced30f0d71c2a5cf333b3de23af48f2" kindref="member">GetAllRooms</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;ShipWeapon&gt;<sp/>allWeapons<sp/>=<sp/><ref refid="classGridPlacer_1a9392a71aaccfdb44c762bc15fd688591" kindref="member">playerShip</ref>.<ref refid="classShip_1a058800cd1cdc9601aeb176ac45fd91d4" kindref="member">GetAllWeapons</ref>();<sp/></highlight><highlight class="comment">//<sp/>함선의<sp/>모든<sp/>무기<sp/>가져오기<sp/>(구현<sp/>필요)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>배치된<sp/>방<sp/>없으면<sp/>그리드<sp/>중앙</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allRooms.Count<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>allWeapons.Count<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGridPlacer_1a67a8b7577950ee0bbbed35781a1e984b" kindref="member">GetWorldPositionFromGrid</ref>(gridSize<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>전체<sp/>타일<sp/>평균<sp/>위치<sp/>계산</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;Vector2Int&gt;<sp/>allTiles<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="classRoom" kindref="compound">Room</ref><sp/>room<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>allRooms)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allTiles.AddRange(room.<ref refid="classBlueprintRoom_1a7e0e187aee44308f619d702050ee3679" kindref="member">GetOccupiedTiles</ref>());</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="classShipWeapon" kindref="compound">ShipWeapon</ref><sp/>weapon<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>allWeapons)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>무기가<sp/>점유하는<sp/>타일<sp/>추가<sp/>(구현<sp/>필요)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2Int<sp/>pos<sp/>=<sp/>weapon.<ref refid="classBlueprintWeapon_1a85d791c56437b9f6c2f8abc6209808eb" kindref="member">GetGridPosition</ref>();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allTiles.Add(pos);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allTiles.Add(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2Int(pos.x<sp/>+<sp/>1,<sp/>pos.y));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2<sp/>average<sp/>=<sp/>Vector2.zero;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(Vector2Int<sp/>tile<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>allTiles)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average<sp/>+=<sp/>(Vector2)tile;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average<sp/>/=<sp/>allTiles.Count;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGridPlacer_1a67a8b7577950ee0bbbed35781a1e984b" kindref="member">GetWorldPositionFromGrid</ref>(Vector2Int.RoundToInt(average));</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="classGridPlacer_1aab1ac19e1eb794283f10c830d04c2922" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGridPlacer_1aab1ac19e1eb794283f10c830d04c2922" kindref="member">IsInGrid</ref>(Vector2Int<sp/>tile)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tile.x<sp/>&lt;<sp/>0<sp/>||<sp/>tile.x<sp/>&gt;=<sp/>gridSize.x<sp/>||<sp/>tile.y<sp/>&lt;<sp/>0<sp/>||<sp/>tile.y<sp/>&gt;=<sp/>gridSize.y)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="classGridPlacer_1a3153382f8eba83fcd114788163728a22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGridPlacer_1a3153382f8eba83fcd114788163728a22" kindref="member">IsTileOccupied</ref>(Vector2Int<sp/>tile)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGridPlacer_1a4bc6348d6038335298cb71251da42291" kindref="member">occupiedGridTiles</ref>.Contains(tile);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="classGridPlacer_1a922df24240435582d5d98a30d0f56ccc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGridPlacer_1a922df24240435582d5d98a30d0f56ccc" kindref="member">MarkObjectOccupied</ref>(<ref refid="interfaceIBlueprintPlaceable" kindref="compound">IBlueprintPlaceable</ref><sp/>placeable)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(Vector2Int<sp/>tile<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>placeable.<ref refid="interfaceIBlueprintPlaceable_1a018a87125833cd2bc8f09d7b0433bc33" kindref="member">GetOccupiedTiles</ref>())</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGridPlacer_1a4bc6348d6038335298cb71251da42291" kindref="member">occupiedGridTiles</ref>.Add(tile);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="classGridPlacer_1abd95a28be8d9284dff882e48cb5d75c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGridPlacer_1abd95a28be8d9284dff882e48cb5d75c3" kindref="member">UnMarkObjectOccupied</ref>(<ref refid="interfaceIBlueprintPlaceable" kindref="compound">IBlueprintPlaceable</ref><sp/>placeable)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(Vector2Int<sp/>tile<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>placeable.<ref refid="interfaceIBlueprintPlaceable_1a018a87125833cd2bc8f09d7b0433bc33" kindref="member">GetOccupiedTiles</ref>())</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGridPlacer_1a4bc6348d6038335298cb71251da42291" kindref="member">occupiedGridTiles</ref>.Remove(tile);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="classGridPlacer_1a437aa8a7f5d613e88c6f2c3c73a2979c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IEnumerable&lt;Vector2Int&gt;<sp/><ref refid="classGridPlacer_1a437aa8a7f5d613e88c6f2c3c73a2979c" kindref="member">GetAllOccupiedTiles</ref>()</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGridPlacer_1a4bc6348d6038335298cb71251da42291" kindref="member">occupiedGridTiles</ref>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="classGridPlacer_1a7952bea4a05cd391da94778ec2e5f3b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGridPlacer_1a7952bea4a05cd391da94778ec2e5f3b9" kindref="member">CanPlaceObject</ref>(<ref refid="interfaceIBlueprintPlaceable" kindref="compound">IBlueprintPlaceable</ref><sp/>placeable,<sp/>Vector2Int<sp/>position,<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>rotation)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1)<sp/>기존<sp/>상태<sp/>저장</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2Int<sp/>originalPos<sp/>=<sp/>placeable.<ref refid="interfaceIBlueprintPlaceable_1ae74f4fe02223313619f2809a6caa72c6" kindref="member">GetGridPosition</ref>();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>originalRot<sp/>=<sp/>placeable.<ref refid="interfaceIBlueprintPlaceable_1ab0239f32856108832ca9ff02fab66fe6" kindref="member">GetRotation</ref>();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2)<sp/>새<sp/>위치<sp/>및<sp/>회전<sp/>설정</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>placeable.<ref refid="interfaceIBlueprintPlaceable_1ac30756929c602873e3b2471dc9d63584" kindref="member">SetGridPosition</ref>(position);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rotation<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>placeable<sp/>is<sp/><ref refid="classBlueprintRoom" kindref="compound">BlueprintRoom</ref><sp/>room)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room.bpRotation<sp/>=<sp/>(Constants.Rotations.Rotation)rotation;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room.bpRoomSize<sp/>=<sp/>RoomRotationUtility.GetRotatedSize(</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room.bpRoomData.GetRoomDataByLevel(room.bpLevelIndex).size,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room.bpRotation</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rotation<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>placeable<sp/>is<sp/><ref refid="classBlueprintWeapon" kindref="compound">BlueprintWeapon</ref><sp/>weapon)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.bpAttachedDirection<sp/>=<sp/>(ShipWeaponAttachedDirection)rotation;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3)<sp/>점유<sp/>타일<sp/>업데이트</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(placeable<sp/>is<sp/><ref refid="classBlueprintRoom" kindref="compound">BlueprintRoom</ref><sp/>room2)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room2.UpdateOccupiedTiles();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(placeable<sp/>is<sp/><ref refid="classBlueprintWeapon" kindref="compound">BlueprintWeapon</ref><sp/>weapon2)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon2.UpdateOccupiedTiles();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;Vector2Int&gt;<sp/>tilesToOccupy<sp/>=<sp/>placeable.<ref refid="interfaceIBlueprintPlaceable_1a018a87125833cd2bc8f09d7b0433bc33" kindref="member">GetOccupiedTiles</ref>();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4)<sp/>그리드<sp/>범위<sp/>벗어나는지<sp/>검사</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(Vector2Int<sp/>tile<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tilesToOccupy)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classGridPlacer_1aab1ac19e1eb794283f10c830d04c2922" kindref="member">IsInGrid</ref>(tile))</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>복원</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>placeable.<ref refid="interfaceIBlueprintPlaceable_1ac30756929c602873e3b2471dc9d63584" kindref="member">SetGridPosition</ref>(originalPos);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(placeable<sp/>is<sp/><ref refid="classBlueprintRoom" kindref="compound">BlueprintRoom</ref><sp/>room3)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room3.bpRotation<sp/>=<sp/>(Constants.Rotations.Rotation)originalRot;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room3.bpRoomSize<sp/>=<sp/>RoomRotationUtility.GetRotatedSize(</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room3.bpRoomData.GetRoomDataByLevel(room3.bpLevelIndex).size,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room3.bpRotation</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room3.UpdateOccupiedTiles();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(placeable<sp/>is<sp/><ref refid="classBlueprintWeapon" kindref="compound">BlueprintWeapon</ref><sp/>weapon3)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon3.bpAttachedDirection<sp/>=<sp/>(ShipWeaponAttachedDirection)originalRot;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon3.UpdateOccupiedTiles();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>5)<sp/>겹침<sp/>체크<sp/>(수정된<sp/>부분)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(Vector2Int<sp/>tile<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tilesToOccupy)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classGridPlacer_1a3153382f8eba83fcd114788163728a22" kindref="member">IsTileOccupied</ref>(tile))</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>복원</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>placeable.<ref refid="interfaceIBlueprintPlaceable_1ac30756929c602873e3b2471dc9d63584" kindref="member">SetGridPosition</ref>(originalPos);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(placeable<sp/>is<sp/><ref refid="classBlueprintRoom" kindref="compound">BlueprintRoom</ref><sp/>room4)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room4.bpRotation<sp/>=<sp/>(Constants.Rotations.Rotation)originalRot;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room4.bpRoomSize<sp/>=<sp/>RoomRotationUtility.GetRotatedSize(</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room4.bpRoomData.GetRoomDataByLevel(room4.bpLevelIndex).size,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room4.bpRotation</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room4.UpdateOccupiedTiles();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(placeable<sp/>is<sp/><ref refid="classBlueprintWeapon" kindref="compound">BlueprintWeapon</ref><sp/>weapon4)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon4.bpAttachedDirection<sp/>=<sp/>(ShipWeaponAttachedDirection)originalRot;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon4.UpdateOccupiedTiles();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>6)<sp/>모든<sp/>검사를<sp/>통과하면<sp/>원래<sp/>상태로<sp/>복원하고<sp/>true<sp/>반환</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>placeable.<ref refid="interfaceIBlueprintPlaceable_1ac30756929c602873e3b2471dc9d63584" kindref="member">SetGridPosition</ref>(originalPos);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(placeable<sp/>is<sp/><ref refid="classBlueprintRoom" kindref="compound">BlueprintRoom</ref><sp/>room5)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room5.bpRotation<sp/>=<sp/>(Constants.Rotations.Rotation)originalRot;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room5.bpRoomSize<sp/>=<sp/>RoomRotationUtility.GetRotatedSize(</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room5.bpRoomData.GetRoomDataByLevel(room5.bpLevelIndex).size,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room5.bpRotation</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>room5.UpdateOccupiedTiles();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(placeable<sp/>is<sp/><ref refid="classBlueprintWeapon" kindref="compound">BlueprintWeapon</ref><sp/>weapon5)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon5.bpAttachedDirection<sp/>=<sp/>(ShipWeaponAttachedDirection)originalRot;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon5.UpdateOccupiedTiles();</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="classGridPlacer_1a329304b7ca9ec3e50e8e4bf5cd360b8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGridPlacer_1a329304b7ca9ec3e50e8e4bf5cd360b8f" kindref="member">CanPlaceRoom</ref>(<ref refid="classRoomData" kindref="compound">RoomData</ref><sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/>Vector2Int<sp/>position,<sp/>Constants.Rotations.Rotation<sp/>rotation)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRoomData_1_1RoomLevel" kindref="compound">RoomData.RoomLevel</ref><sp/>levelData<sp/>=<sp/>data.<ref refid="classRoomData_1a93ada549c4d197d14917913e944f46c2" kindref="member">GetRoomDataByLevel</ref>(level);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2Int<sp/>size<sp/>=<sp/>RoomRotationUtility.GetRotatedSize(levelData.<ref refid="classRoomData_1_1RoomLevel_1a1038e7c8647b924aed778b2c211dc049" kindref="member">size</ref>,<sp/>rotation);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;Vector2Int&gt;<sp/>tilesToOccupy<sp/>=<sp/>RoomRotationUtility.GetOccupiedGridPositions(position,<sp/>size,<sp/>rotation);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>그리드<sp/>범위<sp/>벗어나는지<sp/>체크</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(Vector2Int<sp/>tile<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tilesToOccupy)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classGridPlacer_1aab1ac19e1eb794283f10c830d04c2922" kindref="member">IsInGrid</ref>(tile))</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>겹침<sp/>체크</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(Vector2Int<sp/>tile<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tilesToOccupy)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classGridPlacer_1a3153382f8eba83fcd114788163728a22" kindref="member">IsTileOccupied</ref>(tile))</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="classGridPlacer_1aca24a07e1070703d190a127a89613d64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGridPlacer_1aca24a07e1070703d190a127a89613d64" kindref="member">CanPlaceWeapon</ref>(<ref refid="classShipWeaponData" kindref="compound">ShipWeaponData</ref><sp/>data,<sp/>Vector2Int<sp/>position,<sp/>ShipWeaponAttachedDirection<sp/>direction)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;Vector2Int&gt;<sp/>tilesToOccupy<sp/>=<sp/>RoomRotationUtility.GetOccupiedGridPositions(position,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2Int(2,<sp/>1),</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Constants.Rotations.Rotation.Rotation0);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>그리드<sp/>범위<sp/>벗어나는지<sp/>체크</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(Vector2Int<sp/>tile<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tilesToOccupy)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classGridPlacer_1aab1ac19e1eb794283f10c830d04c2922" kindref="member">IsInGrid</ref>(tile))</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>겹침<sp/>체크</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(Vector2Int<sp/>tile<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tilesToOccupy)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classGridPlacer_1a3153382f8eba83fcd114788163728a22" kindref="member">IsTileOccupied</ref>(tile))</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="classGridPlacer_1a2392673a4205e76f004e252a493286b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGridPlacer_1a2392673a4205e76f004e252a493286b5" kindref="member">PlaceRoom</ref>(<ref refid="classRoomData" kindref="compound">RoomData</ref><sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/>Vector2Int<sp/>position,<sp/>Constants.Rotations.Rotation<sp/>rotation)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2Int<sp/>size<sp/>=<sp/>RoomRotationUtility.GetRotatedSize(data.<ref refid="classRoomData_1a93ada549c4d197d14917913e944f46c2" kindref="member">GetRoomDataByLevel</ref>(level).<ref refid="classRoomData_1_1RoomLevel_1a1038e7c8647b924aed778b2c211dc049" kindref="member">size</ref>,<sp/>rotation);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2<sp/>offset<sp/>=<sp/>RoomRotationUtility.GetRotationOffset(size,<sp/>rotation);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>worldPos<sp/>=<sp/><ref refid="classGridPlacer_1a67a8b7577950ee0bbbed35781a1e984b" kindref="member">GetWorldPositionFromGrid</ref>(position)<sp/>+<sp/>(Vector3)offset;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameObject<sp/>bpRoomGO<sp/>=<sp/>Instantiate(<ref refid="classGridPlacer_1aff764b1840caed8ae6c1ac2c6452d8b9" kindref="member">roomPrefab</ref>,<sp/><ref refid="classGridPlacer_1ac21295d57c03c692520474f158d7b933" kindref="member">targetBlueprintShip</ref>.transform);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpRoomGO.transform.position<sp/>=<sp/>worldPos<sp/>+<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,<sp/>0,<sp/>10f);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpRoomGO.transform.rotation<sp/>=<sp/>Quaternion.Euler(0,<sp/>0,<sp/>-(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)rotation<sp/>*<sp/>90);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classBlueprintRoom" kindref="compound">BlueprintRoom</ref><sp/>bpRoom<sp/>=<sp/>bpRoomGO.GetComponent&lt;<ref refid="classBlueprintRoom" kindref="compound">BlueprintRoom</ref>&gt;();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpRoom.<ref refid="classBlueprintRoom_1a5a8b6723ac5f7a9e099dee6c0c795540" kindref="member">SetGridPlacer</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpRoom.<ref refid="classBlueprintRoom_1ae76607d6bcaeffa74b78b54acc1b0128" kindref="member">Initialize</ref>(data,<sp/>level,<sp/>position,<sp/>rotation);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpRoom.<ref refid="classBlueprintRoom_1a206cee30827d88a027ef567ac9963929" kindref="member">SetBlueprint</ref>(<ref refid="classGridPlacer_1ac21295d57c03c692520474f158d7b933" kindref="member">targetBlueprintShip</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGridPlacer_1a922df24240435582d5d98a30d0f56ccc" kindref="member">MarkObjectOccupied</ref>(bpRoom);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGridPlacer_1ac21295d57c03c692520474f158d7b933" kindref="member">targetBlueprintShip</ref>.<ref refid="classBlueprintShip_1ab8c6bef407ee2520f0ee47c39089196b" kindref="member">AddPlaceable</ref>(bpRoom);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="classGridPlacer_1a60364dec18d1d693cef75d517e768de6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classBlueprintWeapon" kindref="compound">BlueprintWeapon</ref><sp/><ref refid="classGridPlacer_1a60364dec18d1d693cef75d517e768de6" kindref="member">PlaceWeapon</ref>(<ref refid="classShipWeaponData" kindref="compound">ShipWeaponData</ref><sp/>data,<sp/>Vector2Int<sp/>position,<sp/>ShipWeaponAttachedDirection<sp/>direction)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2Int<sp/>size<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(2,<sp/>1);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2<sp/>offset<sp/>=<sp/>RoomRotationUtility.GetRotationOffset(size,<sp/>Constants.Rotations.Rotation.Rotation0);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>worldPos<sp/>=<sp/><ref refid="classGridPlacer_1a67a8b7577950ee0bbbed35781a1e984b" kindref="member">GetWorldPositionFromGrid</ref>(position)<sp/>+<sp/>(Vector3)offset;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameObject<sp/>bpWeaponGO<sp/>=<sp/>Instantiate(<ref refid="classGridPlacer_1ad38a51961019b2d29d57e76dd7d13380" kindref="member">weaponPrefab</ref>,<sp/><ref refid="classGridPlacer_1ac21295d57c03c692520474f158d7b933" kindref="member">targetBlueprintShip</ref>.transform);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpWeaponGO.transform.position<sp/>=<sp/>worldPos<sp/>+<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,<sp/>0,<sp/>10f);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classBlueprintWeapon" kindref="compound">BlueprintWeapon</ref><sp/>bpWeapon<sp/>=<sp/>bpWeaponGO.GetComponent&lt;<ref refid="classBlueprintWeapon" kindref="compound">BlueprintWeapon</ref>&gt;();</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpWeapon.<ref refid="classBlueprintWeapon_1aea22c0e321f64c39c6f6a56d020af717" kindref="member">SetGridPlacer</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpWeapon.<ref refid="classBlueprintWeapon_1a56914dbc72da61c2e31524b9fdabe257" kindref="member">Initialize</ref>(data,<sp/>position,<sp/>direction);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>설계도<sp/>함선의<sp/>외갑판<sp/>레벨<sp/>적용<sp/>(함선에<sp/>추가하기<sp/>전)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentHullLevel<sp/>=<sp/><ref refid="classGridPlacer_1ac21295d57c03c692520474f158d7b933" kindref="member">targetBlueprintShip</ref>.<ref refid="classBlueprintShip_1af261ef03f43fb9025372b1ff117489e1" kindref="member">GetHullLevel</ref>();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpWeapon.<ref refid="classBlueprintWeapon_1ab44eb8d7287bbcaa5504a8629a4bbf4f" kindref="member">SetHullLevel</ref>(currentHullLevel);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpWeapon.<ref refid="classBlueprintWeapon_1a484e24eaf4ebb1994f8c9817dcbb2f6f" kindref="member">SetBlueprint</ref>(<ref refid="classGridPlacer_1ac21295d57c03c692520474f158d7b933" kindref="member">targetBlueprintShip</ref>);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGridPlacer_1a922df24240435582d5d98a30d0f56ccc" kindref="member">MarkObjectOccupied</ref>(bpWeapon);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>함선에<sp/>무기<sp/>추가<sp/>(BlueprintShip.AddPlaceable<sp/>메서드에서<sp/>다시<sp/>한번<sp/>외갑판<sp/>레벨<sp/>적용)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGridPlacer_1ac21295d57c03c692520474f158d7b933" kindref="member">targetBlueprintShip</ref>.<ref refid="classBlueprintShip_1ab8c6bef407ee2520f0ee47c39089196b" kindref="member">AddPlaceable</ref>(bpWeapon);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bpWeapon;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>BPPreviewArea<sp/>용<sp/>함수</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="classGridPlacer_1a11cf51c13e2c8c9261444a8e1687218a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>GameObject<sp/><ref refid="classGridPlacer_1a11cf51c13e2c8c9261444a8e1687218a" kindref="member">PlacePreviewRoom</ref>(<ref refid="classRoomData" kindref="compound">RoomData</ref><sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/>Vector2Int<sp/>position,<sp/>Constants.Rotations.Rotation<sp/>rotation,<sp/>Transform<sp/>previewRoot,<sp/>List&lt;Vector2Int&gt;<sp/>tilePos)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2Int<sp/>size<sp/>=<sp/>RoomRotationUtility.GetRotatedSize(data.<ref refid="classRoomData_1a93ada549c4d197d14917913e944f46c2" kindref="member">GetRoomDataByLevel</ref>(level).<ref refid="classRoomData_1_1RoomLevel_1a1038e7c8647b924aed778b2c211dc049" kindref="member">size</ref>,<sp/>rotation);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2<sp/>offset<sp/>=<sp/>RoomRotationUtility.GetRotationOffset(size,<sp/>rotation);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>worldPos<sp/>=<sp/><ref refid="classGridPlacer_1a67a8b7577950ee0bbbed35781a1e984b" kindref="member">GetWorldPositionFromGrid</ref>(position)<sp/>+<sp/>(Vector3)offset;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameObject<sp/>previewObj<sp/>=<sp/>Instantiate(previewRoomPrefab,<sp/>previewRoot);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previewObj.transform.position<sp/>=<sp/>worldPos<sp/>+<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,<sp/>0,<sp/>10f);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previewObj.transform.rotation<sp/>=<sp/>Quaternion.Euler(0,<sp/>0,<sp/>-(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)rotation<sp/>*<sp/>90);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previewObj.name<sp/>=<sp/>$</highlight><highlight class="stringliteral">&quot;PreviewRoom_{data.name}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classBlueprintRoom" kindref="compound">BlueprintRoom</ref><sp/>bpRoom<sp/>=<sp/>previewObj.GetComponent&lt;<ref refid="classBlueprintRoom" kindref="compound">BlueprintRoom</ref>&gt;();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bpRoom.SetGridPlacer(this);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpRoom.<ref refid="classBlueprintRoom_1ae76607d6bcaeffa74b78b54acc1b0128" kindref="member">Initialize</ref>(data,<sp/>level,<sp/>position,<sp/>rotation);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bpRoom.SetBlueprint(targetBlueprintShip);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(Vector2Int<sp/>tile<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bpRoom.GetOccupiedTiles())</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tilePos.Add(tile);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>previewObj;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="466" refid="classGridPlacer_1a38cc9ea2fbdde83a506c75b7cad9010c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>GameObject<sp/><ref refid="classGridPlacer_1a38cc9ea2fbdde83a506c75b7cad9010c" kindref="member">PlacePreviewWeapon</ref>(<ref refid="classShipWeaponData" kindref="compound">ShipWeaponData</ref><sp/>data,<sp/>Vector2Int<sp/>position,<sp/>ShipWeaponAttachedDirection<sp/>direction,<sp/>Transform<sp/>previewRoot,<sp/>List&lt;Vector2Int&gt;<sp/>tilePos)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2Int<sp/>size<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(2,<sp/>1);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2<sp/>offset<sp/>=<sp/>RoomRotationUtility.GetRotationOffset(size,<sp/>Constants.Rotations.Rotation.Rotation0);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>worldPos<sp/>=<sp/><ref refid="classGridPlacer_1a67a8b7577950ee0bbbed35781a1e984b" kindref="member">GetWorldPositionFromGrid</ref>(position)<sp/>+<sp/>(Vector3)offset;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameObject<sp/>previewObj<sp/>=<sp/>Instantiate(previewWeaponPrefab,<sp/>previewRoot);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previewObj.transform.position<sp/>=<sp/>worldPos<sp/>+<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,<sp/>0,<sp/>10f);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previewObj.name<sp/>=<sp/>$</highlight><highlight class="stringliteral">&quot;PreviewWeapon_{data.name}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classBlueprintWeapon" kindref="compound">BlueprintWeapon</ref><sp/>bpWeapon<sp/>=<sp/>previewObj.GetComponent&lt;<ref refid="classBlueprintWeapon" kindref="compound">BlueprintWeapon</ref>&gt;();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpWeapon.<ref refid="classBlueprintWeapon_1a56914dbc72da61c2e31524b9fdabe257" kindref="member">Initialize</ref>(data,<sp/>position,<sp/>direction);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>설계도<sp/>함선의<sp/>외갑판<sp/>레벨<sp/>적용<sp/>(함선에<sp/>추가하기<sp/>전)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentHullLevel<sp/>=<sp/><ref refid="classGridPlacer_1ac21295d57c03c692520474f158d7b933" kindref="member">targetBlueprintShip</ref>.<ref refid="classBlueprintShip_1af261ef03f43fb9025372b1ff117489e1" kindref="member">GetHullLevel</ref>();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpWeapon.<ref refid="classBlueprintWeapon_1ab44eb8d7287bbcaa5504a8629a4bbf4f" kindref="member">SetHullLevel</ref>(currentHullLevel);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tilePos.Add(bpWeapon.<ref refid="classBlueprintWeapon_1a8cfe28579eabea19cdb49d89b8e73078" kindref="member">bpPosition</ref>);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>previewObj;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Assets/Scripts/CustomizeShip/GridPlacer.cs"/>
  </compounddef>
</doxygen>
