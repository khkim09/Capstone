<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classES3" kind="class" language="C#" prot="public">
    <compoundname>ES3</compoundname>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="classES3_1a3b3664cb28e141ac06622c5c704a7dab" prot="public" static="no" strong="yes">
        <type></type>
        <name>Location</name>
        <qualifiedname>ES3.Location</qualifiedname>
        <enumvalue id="classES3_1a3b3664cb28e141ac06622c5c704a7daba0b27918290ff5323bea1e3b78a9cf04e" prot="public">
          <name>File</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classES3_1a3b3664cb28e141ac06622c5c704a7dabafc185ac592300f2d2a3e50f65dccfa0e" prot="public">
          <name>PlayerPrefs</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classES3_1a3b3664cb28e141ac06622c5c704a7dabac7b000daa61caf56cd38bb0463972552" prot="public">
          <name>InternalMS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classES3_1a3b3664cb28e141ac06622c5c704a7dabaddcf50c29294d4414f3f7c1bbc892cb5" prot="public">
          <name>Resources</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classES3_1a3b3664cb28e141ac06622c5c704a7dabaab0cf104f39708eabd07b8cb67e149ba" prot="public">
          <name>Cache</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="20" column="7" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="enum" id="classES3_1a7c02be67695502ca146c685e9a0ea5a8" prot="public" static="no" strong="yes">
        <type></type>
        <name>Directory</name>
        <qualifiedname>ES3.Directory</qualifiedname>
        <enumvalue id="classES3_1a7c02be67695502ca146c685e9a0ea5a8aa719b7977a39d032029f3567d4499e0b" prot="public">
          <name>PersistentDataPath</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classES3_1a7c02be67695502ca146c685e9a0ea5a8a4ace5426e051f5deae509b9d4333f01c" prot="public">
          <name>DataPath</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="21" column="7" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="enum" id="classES3_1ac30ca75597eaa08ba4827423ca65baac" prot="public" static="no" strong="yes">
        <type></type>
        <name>EncryptionType</name>
        <qualifiedname>ES3.EncryptionType</qualifiedname>
        <enumvalue id="classES3_1ac30ca75597eaa08ba4827423ca65baaca6adf97f83acf6453d4a6a4b1070f3754" prot="public">
          <name>None</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classES3_1ac30ca75597eaa08ba4827423ca65baaca76b7593457e2ab50befe2dcd63cf388f" prot="public">
          <name>AES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="22" column="7" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="enum" id="classES3_1aaec9bdaa1bf5695b4dd3cca92a7aea6a" prot="public" static="no" strong="yes">
        <type></type>
        <name>CompressionType</name>
        <qualifiedname>ES3.CompressionType</qualifiedname>
        <enumvalue id="classES3_1aaec9bdaa1bf5695b4dd3cca92a7aea6aa6adf97f83acf6453d4a6a4b1070f3754" prot="public">
          <name>None</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classES3_1aaec9bdaa1bf5695b4dd3cca92a7aea6aa2548e50da66f41afea53de1cbbf3b30c" prot="public">
          <name>Gzip</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="23" column="11" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="enum" id="classES3_1a7c1a910fd4d27d33feea6cba79c61c76" prot="public" static="no" strong="yes">
        <type></type>
        <name>Format</name>
        <qualifiedname>ES3.Format</qualifiedname>
        <enumvalue id="classES3_1a7c1a910fd4d27d33feea6cba79c61c76a0ecd11c1d7a287401d148a23bbd7a2f8" prot="public">
          <name>JSON</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="24" column="11" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="enum" id="classES3_1af062fdcc4fd8f2bf3af434d6fde00e02" prot="public" static="no" strong="yes">
        <type></type>
        <name>ReferenceMode</name>
        <qualifiedname>ES3.ReferenceMode</qualifiedname>
        <enumvalue id="classES3_1af062fdcc4fd8f2bf3af434d6fde00e02ab258d664af5b4b0c670e9038511ff214" prot="public">
          <name>ByRef</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classES3_1af062fdcc4fd8f2bf3af434d6fde00e02ad678aba164b442f27e193f3f05ef614f" prot="public">
          <name>ByValue</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classES3_1af062fdcc4fd8f2bf3af434d6fde00e02a400c3ee60580b6a6adf6672bc4237273" prot="public">
          <name>ByRefAndValue</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="25" column="7" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="enum" id="classES3_1acd8f6881ebfc5b079c272d40b41c914e" prot="public" static="no" strong="yes">
        <type></type>
        <name>ImageType</name>
        <qualifiedname>ES3.ImageType</qualifiedname>
        <enumvalue id="classES3_1acd8f6881ebfc5b079c272d40b41c914ea907e06a16862d82ca6907a28a68d0ad6" prot="public">
          <name>JPEG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classES3_1acd8f6881ebfc5b079c272d40b41c914ea55505ba281b015ec31f03ccb151b2a34" prot="public">
          <name>PNG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="26" column="11" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="26" bodyend="26"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classES3_1aa0c98e77dac7b3d8f2d0f06efe34c2c2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.Save</definition>
        <argsstring>(string key, object value)</argsstring>
        <name>Save</name>
        <qualifiedname>ES3.Save</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>object</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key we want to use to identify our value in the file.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value we want to save.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="33" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="33" bodyend="36"/>
        <referencedby refid="classGameManager_1a3f9d70e8b90c50d31469cf9b15bda527" compoundref="GameManager_8cs" startline="623" endline="651">GameManager.SavePlayerData</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1aef1bbb11ef3a4534442accc3124c7b23" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.Save</definition>
        <argsstring>(string key, object value, string filePath)</argsstring>
        <name>Save</name>
        <qualifiedname>ES3.Save</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>object</type>
          <declname>value</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Saves the value to a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key we want to use to identify our value in the file.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value we want to save.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to store our value to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="42" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a09fd942bd6392028fd3749531b2026dd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.Save</definition>
        <argsstring>(string key, object value, string filePath, ES3Settings settings)</argsstring>
        <name>Save</name>
        <qualifiedname>ES3.Save</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>object</type>
          <declname>value</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Saves the value to a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key we want to use to identify our value in the file.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value we want to save.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to store our value to.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="52" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a8e47754af46a6b80d10fa84ffb3b6e90" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.Save</definition>
        <argsstring>(string key, object value, ES3Settings settings)</argsstring>
        <name>Save</name>
        <qualifiedname>ES3.Save</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>object</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Saves the value to a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key we want to use to identify our value in the file.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value we want to save.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="61" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a58053e1d1acf2f9f044235aee1735efc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.Save&lt; T &gt;</definition>
        <argsstring>(string key, T value)</argsstring>
        <name>Save&lt; T &gt;</name>
        <qualifiedname>ES3.Save&lt; T &gt;</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Saves the value to the default file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the data that we want to save.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key we want to use to identify our value in the file.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value we want to save.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="70" column="19" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="70" bodyend="73"/>
        <references refid="classES3_1a58053e1d1acf2f9f044235aee1735efc" compoundref="ES3_8cs" startline="70" endline="73">Save&lt; T &gt;</references>
        <referencedby refid="classES3_1a58053e1d1acf2f9f044235aee1735efc" compoundref="ES3_8cs" startline="70" endline="73">Save&lt; T &gt;</referencedby>
        <referencedby refid="classES3_1a8e913c8e908373525526f9984882820c" compoundref="ES3_8cs" startline="80" endline="83">Save&lt; T &gt;</referencedby>
        <referencedby refid="classES3_1a45f712a09ef55f5d180e5810aabe24cd" compoundref="ES3_8cs" startline="91" endline="94">Save&lt; T &gt;</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1a8e913c8e908373525526f9984882820c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.Save&lt; T &gt;</definition>
        <argsstring>(string key, T value, string filePath)</argsstring>
        <name>Save&lt; T &gt;</name>
        <qualifiedname>ES3.Save&lt; T &gt;</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Saves the value to a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the data that we want to save.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key we want to use to identify our value in the file.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value we want to save.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to store our value to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="80" column="19" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="80" bodyend="83"/>
        <references refid="classES3_1a58053e1d1acf2f9f044235aee1735efc" compoundref="ES3_8cs" startline="70" endline="73">Save&lt; T &gt;</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a45f712a09ef55f5d180e5810aabe24cd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.Save&lt; T &gt;</definition>
        <argsstring>(string key, T value, string filePath, ES3Settings settings)</argsstring>
        <name>Save&lt; T &gt;</name>
        <qualifiedname>ES3.Save&lt; T &gt;</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Saves the value to a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the data that we want to save.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key we want to use to identify our value in the file.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value we want to save.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to store our value to.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="91" column="19" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="91" bodyend="94"/>
        <references refid="classES3_1a58053e1d1acf2f9f044235aee1735efc" compoundref="ES3_8cs" startline="70" endline="73">Save&lt; T &gt;</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1ab2c102f86a0b83baff86aa2d0fe87953" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.Save&lt; T &gt;</definition>
        <argsstring>(string key, T value, ES3Settings settings)</argsstring>
        <name>Save&lt; T &gt;</name>
        <qualifiedname>ES3.Save&lt; T &gt;</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Saves the value to a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the data that we want to save.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key we want to use to identify our value in the file.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value we want to save.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="101" column="19" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="101" bodyend="114"/>
        <references refid="classES3Writer_1a8495b421b8cac2ede59e236066b2cea5" compoundref="ES3Writer_8cs" startline="413" endline="416">ES3Writer.Create</references>
        <references refid="classES3Settings_1a4d37bdd73f46cb53d997d8300c78451d" compoundref="ES3Settings_8cs" startline="94" endline="102">ES3Settings.location</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a1b898fa70f361df94be9ed0ab9bcc942" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.SaveRaw</definition>
        <argsstring>(byte[] bytes)</argsstring>
        <name>SaveRaw</name>
        <qualifiedname>ES3.SaveRaw</qualifiedname>
        <param>
          <type>byte[]</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
<para>Creates or overwrites a file with the specified raw bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The bytes we want to store.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="118" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="118" bodyend="121"/>
        <references refid="classES3_1a1b898fa70f361df94be9ed0ab9bcc942" compoundref="ES3_8cs" startline="118" endline="121">SaveRaw</references>
        <referencedby refid="classES3_1ae9f24d279bf249e9d4e38a15289c3ca1" compoundref="ES3_8cs" startline="316" endline="331">SaveImage</referencedby>
        <referencedby refid="classES3_1a1b898fa70f361df94be9ed0ab9bcc942" compoundref="ES3_8cs" startline="118" endline="121">SaveRaw</referencedby>
        <referencedby refid="classES3_1a8512f6c2bf10ea97dfc1b23848f88fe8" compoundref="ES3_8cs" startline="126" endline="129">SaveRaw</referencedby>
        <referencedby refid="classES3_1a940373f7fda22c812b9914a11c7b28b4" compoundref="ES3_8cs" startline="135" endline="138">SaveRaw</referencedby>
        <referencedby refid="classES3_1afbe65fa6a3ee6d34f6deeee2fc6f6edd" compoundref="ES3_8cs" startline="160" endline="163">SaveRaw</referencedby>
        <referencedby refid="classES3_1aac90c91f0760f1112681afc96bcae655" compoundref="ES3_8cs" startline="185" endline="189">SaveRaw</referencedby>
        <referencedby refid="classES3_1adde48288b025aef9a954cbddec99c0ee" compoundref="ES3_8cs" startline="168" endline="171">SaveRaw</referencedby>
        <referencedby refid="classES3_1abdb2a76e431790449149993de079350b" compoundref="ES3_8cs" startline="177" endline="180">SaveRaw</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1a8512f6c2bf10ea97dfc1b23848f88fe8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.SaveRaw</definition>
        <argsstring>(byte[] bytes, string filePath)</argsstring>
        <name>SaveRaw</name>
        <qualifiedname>ES3.SaveRaw</qualifiedname>
        <param>
          <type>byte[]</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Creates or overwrites a file with the specified raw bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The bytes we want to store.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to store our bytes to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="126" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="126" bodyend="129"/>
        <references refid="classES3_1a1b898fa70f361df94be9ed0ab9bcc942" compoundref="ES3_8cs" startline="118" endline="121">SaveRaw</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a940373f7fda22c812b9914a11c7b28b4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.SaveRaw</definition>
        <argsstring>(byte[] bytes, string filePath, ES3Settings settings)</argsstring>
        <name>SaveRaw</name>
        <qualifiedname>ES3.SaveRaw</qualifiedname>
        <param>
          <type>byte[]</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Creates or overwrites a file with the specified raw bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The bytes we want to store.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to store our bytes to.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="135" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="135" bodyend="138"/>
        <references refid="classES3_1a1b898fa70f361df94be9ed0ab9bcc942" compoundref="ES3_8cs" startline="118" endline="121">SaveRaw</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1ae53e2139837201ad6ed55bf8e38b0611" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.SaveRaw</definition>
        <argsstring>(byte[] bytes, ES3Settings settings)</argsstring>
        <name>SaveRaw</name>
        <qualifiedname>ES3.SaveRaw</qualifiedname>
        <param>
          <type>byte[]</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Creates or overwrites a file with the specified raw bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The bytes we want to store.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="143" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="143" bodyend="156"/>
        <references refid="classES3Settings_1a4d37bdd73f46cb53d997d8300c78451d" compoundref="ES3Settings_8cs" startline="94" endline="102">ES3Settings.location</references>
        <references refid="classES3File_1a399f5818be437d20e813639d471d22de" compoundref="ES3File_8cs" startline="186" endline="204">ES3File.SaveRaw</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1afbe65fa6a3ee6d34f6deeee2fc6f6edd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.SaveRaw</definition>
        <argsstring>(string str)</argsstring>
        <name>SaveRaw</name>
        <qualifiedname>ES3.SaveRaw</qualifiedname>
        <param>
          <type>string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Creates or overwrites the default file with the specified raw bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string we want to store.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="160" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="160" bodyend="163"/>
        <references refid="classES3_1a1b898fa70f361df94be9ed0ab9bcc942" compoundref="ES3_8cs" startline="118" endline="121">SaveRaw</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1adde48288b025aef9a954cbddec99c0ee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.SaveRaw</definition>
        <argsstring>(string str, string filePath)</argsstring>
        <name>SaveRaw</name>
        <qualifiedname>ES3.SaveRaw</qualifiedname>
        <param>
          <type>string</type>
          <declname>str</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Creates or overwrites the default file with the specified raw bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string we want to store.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to store our bytes to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="168" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="168" bodyend="171"/>
        <references refid="classES3_1a1b898fa70f361df94be9ed0ab9bcc942" compoundref="ES3_8cs" startline="118" endline="121">SaveRaw</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1abdb2a76e431790449149993de079350b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.SaveRaw</definition>
        <argsstring>(string str, string filePath, ES3Settings settings)</argsstring>
        <name>SaveRaw</name>
        <qualifiedname>ES3.SaveRaw</qualifiedname>
        <param>
          <type>string</type>
          <declname>str</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Creates or overwrites a file with the specified raw bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string we want to store.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to store our bytes to.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="177" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="177" bodyend="180"/>
        <references refid="classES3_1a1b898fa70f361df94be9ed0ab9bcc942" compoundref="ES3_8cs" startline="118" endline="121">SaveRaw</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1aac90c91f0760f1112681afc96bcae655" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.SaveRaw</definition>
        <argsstring>(string str, ES3Settings settings)</argsstring>
        <name>SaveRaw</name>
        <qualifiedname>ES3.SaveRaw</qualifiedname>
        <param>
          <type>string</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Creates or overwrites a file with the specified raw bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string we want to store.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="185" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="185" bodyend="189"/>
        <references refid="classES3Settings_1a965bf4d3ac76b0037b3b9c31fde4420c" compoundref="ES3Settings_8cs" startline="121">ES3Settings.encoding</references>
        <references refid="classES3_1a1b898fa70f361df94be9ed0ab9bcc942" compoundref="ES3_8cs" startline="118" endline="121">SaveRaw</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1aa601e9b56a7ee4d67bcb75028c53a74b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.AppendRaw</definition>
        <argsstring>(byte[] bytes)</argsstring>
        <name>AppendRaw</name>
        <qualifiedname>ES3.AppendRaw</qualifiedname>
        <param>
          <type>byte[]</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
<para>Creates or appends the specified bytes to a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The bytes we want to append.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="193" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="193" bodyend="196"/>
        <references refid="classES3_1aa601e9b56a7ee4d67bcb75028c53a74b" compoundref="ES3_8cs" startline="193" endline="196">AppendRaw</references>
        <referencedby refid="classES3_1aa601e9b56a7ee4d67bcb75028c53a74b" compoundref="ES3_8cs" startline="193" endline="196">AppendRaw</referencedby>
        <referencedby refid="classES3_1a0bd897e47e6ebe82400b0be60a223049" compoundref="ES3_8cs" startline="202" endline="205">AppendRaw</referencedby>
        <referencedby refid="classES3_1a8e5091cee8eeaf9c76a5d24e35f5c71f" compoundref="ES3_8cs" startline="228" endline="231">AppendRaw</referencedby>
        <referencedby refid="classES3_1ae87992f4fe10e8d03c9b2a19729eb01a" compoundref="ES3_8cs" startline="236" endline="239">AppendRaw</referencedby>
        <referencedby refid="classES3_1a39ae53f362f4db72c10e7fd6182db0c5" compoundref="ES3_8cs" startline="245" endline="248">AppendRaw</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1a0bd897e47e6ebe82400b0be60a223049" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.AppendRaw</definition>
        <argsstring>(byte[] bytes, string filePath, ES3Settings settings)</argsstring>
        <name>AppendRaw</name>
        <qualifiedname>ES3.AppendRaw</qualifiedname>
        <param>
          <type>byte[]</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Creates or appends the specified bytes to a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The bytes we want to append.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filepath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to append our bytes to.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="202" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="202" bodyend="205"/>
        <references refid="classES3_1aa601e9b56a7ee4d67bcb75028c53a74b" compoundref="ES3_8cs" startline="193" endline="196">AppendRaw</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a48ac006692fe6086bed2ab7089e9196e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.AppendRaw</definition>
        <argsstring>(byte[] bytes, ES3Settings settings)</argsstring>
        <name>AppendRaw</name>
        <qualifiedname>ES3.AppendRaw</qualifiedname>
        <param>
          <type>byte[]</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Creates or appends the specified bytes to a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The bytes we want to append.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="210" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="210" bodyend="224"/>
        <references refid="classES3File_1a73f8c630761708e5bc81ddffdd7ba78d" compoundref="ES3File_8cs" startline="209" endline="217">ES3File.AppendRaw</references>
        <references refid="classES3Settings_1a4d37bdd73f46cb53d997d8300c78451d" compoundref="ES3Settings_8cs" startline="94" endline="102">ES3Settings.location</references>
        <references refid="classES3Settings_1aec222d18f62c320ffbc1648c05514731" compoundref="ES3Settings_8cs" startline="105">ES3Settings.path</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a8e5091cee8eeaf9c76a5d24e35f5c71f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.AppendRaw</definition>
        <argsstring>(string str)</argsstring>
        <name>AppendRaw</name>
        <qualifiedname>ES3.AppendRaw</qualifiedname>
        <param>
          <type>string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Creates or appends the specified string to the default file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string we want to append.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="228" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="228" bodyend="231"/>
        <references refid="classES3_1aa601e9b56a7ee4d67bcb75028c53a74b" compoundref="ES3_8cs" startline="193" endline="196">AppendRaw</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1ae87992f4fe10e8d03c9b2a19729eb01a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.AppendRaw</definition>
        <argsstring>(string str, string filePath)</argsstring>
        <name>AppendRaw</name>
        <qualifiedname>ES3.AppendRaw</qualifiedname>
        <param>
          <type>string</type>
          <declname>str</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Creates or appends the specified string to the default file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string we want to append.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to append our string to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="236" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="236" bodyend="239"/>
        <references refid="classES3_1aa601e9b56a7ee4d67bcb75028c53a74b" compoundref="ES3_8cs" startline="193" endline="196">AppendRaw</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a39ae53f362f4db72c10e7fd6182db0c5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.AppendRaw</definition>
        <argsstring>(string str, string filePath, ES3Settings settings)</argsstring>
        <name>AppendRaw</name>
        <qualifiedname>ES3.AppendRaw</qualifiedname>
        <param>
          <type>string</type>
          <declname>str</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Creates or appends the specified string to the default file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string we want to append.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to append our string to.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="245" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="245" bodyend="248"/>
        <references refid="classES3_1aa601e9b56a7ee4d67bcb75028c53a74b" compoundref="ES3_8cs" startline="193" endline="196">AppendRaw</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a52f7ef2d18ceafa678633143832638a9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.AppendRaw</definition>
        <argsstring>(string str, ES3Settings settings)</argsstring>
        <name>AppendRaw</name>
        <qualifiedname>ES3.AppendRaw</qualifiedname>
        <param>
          <type>string</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Creates or appends the specified string to the default file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string we want to append.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="253" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="253" bodyend="268"/>
        <references refid="classES3Settings_1a965bf4d3ac76b0037b3b9c31fde4420c" compoundref="ES3Settings_8cs" startline="121">ES3Settings.encoding</references>
        <references refid="classES3Settings_1a4d37bdd73f46cb53d997d8300c78451d" compoundref="ES3Settings_8cs" startline="94" endline="102">ES3Settings.location</references>
        <references refid="classES3Settings_1aec222d18f62c320ffbc1648c05514731" compoundref="ES3Settings_8cs" startline="105">ES3Settings.path</references>
        <references refid="classES3File_1a399f5818be437d20e813639d471d22de" compoundref="ES3File_8cs" startline="186" endline="204">ES3File.SaveRaw</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1ae30961fd88a6b9c636c4ad613643f114" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.SaveImage</definition>
        <argsstring>(Texture2D texture, string imagePath)</argsstring>
        <name>SaveImage</name>
        <qualifiedname>ES3.SaveImage</qualifiedname>
        <param>
          <type>Texture2D</type>
          <declname>texture</declname>
        </param>
        <param>
          <type>string</type>
          <declname>imagePath</declname>
        </param>
        <briefdescription>
<para>Saves a Texture2D as a PNG or JPG, depending on the file extension used for the filePath. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>texture</parametername>
</parameternamelist>
<parameterdescription>
<para>The Texture2D we want to save as a JPG or PNG.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>imagePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the PNG or JPG file we want to create.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="273" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="273" bodyend="276"/>
        <references refid="classES3_1ae30961fd88a6b9c636c4ad613643f114" compoundref="ES3_8cs" startline="273" endline="276">SaveImage</references>
        <referencedby refid="classES3_1a32fa897dd9bc78251e5c77e56bdb07b9" compoundref="ES3_8cs" startline="289" endline="292">SaveImage</referencedby>
        <referencedby refid="classES3_1afbd385f1a30708796ed508f8accdae8e" compoundref="ES3_8cs" startline="298" endline="301">SaveImage</referencedby>
        <referencedby refid="classES3_1a895ab71d4ee415f8bd5f05f69ab45736" compoundref="ES3_8cs" startline="307" endline="310">SaveImage</referencedby>
        <referencedby refid="classES3_1ae30961fd88a6b9c636c4ad613643f114" compoundref="ES3_8cs" startline="273" endline="276">SaveImage</referencedby>
        <referencedby refid="classES3_1ae3045cd199b1fd4ef03e795dc2fd9124" compoundref="ES3_8cs" startline="281" endline="284">SaveImage</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1ae3045cd199b1fd4ef03e795dc2fd9124" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.SaveImage</definition>
        <argsstring>(Texture2D texture, string imagePath, ES3Settings settings)</argsstring>
        <name>SaveImage</name>
        <qualifiedname>ES3.SaveImage</qualifiedname>
        <param>
          <type>Texture2D</type>
          <declname>texture</declname>
        </param>
        <param>
          <type>string</type>
          <declname>imagePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Saves a Texture2D as a PNG or JPG, depending on the file extension used for the filePath. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>texture</parametername>
</parameternamelist>
<parameterdescription>
<para>The Texture2D we want to save as a JPG or PNG.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>imagePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the PNG or JPG file we want to create.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="281" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="281" bodyend="284"/>
        <references refid="classES3_1ae30961fd88a6b9c636c4ad613643f114" compoundref="ES3_8cs" startline="273" endline="276">SaveImage</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a32fa897dd9bc78251e5c77e56bdb07b9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.SaveImage</definition>
        <argsstring>(Texture2D texture, ES3Settings settings)</argsstring>
        <name>SaveImage</name>
        <qualifiedname>ES3.SaveImage</qualifiedname>
        <param>
          <type>Texture2D</type>
          <declname>texture</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Saves a Texture2D as a PNG or JPG, depending on the file extension used for the filePath. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>texture</parametername>
</parameternamelist>
<parameterdescription>
<para>The Texture2D we want to save as a JPG or PNG.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="289" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="289" bodyend="292"/>
        <references refid="classES3_1ae30961fd88a6b9c636c4ad613643f114" compoundref="ES3_8cs" startline="273" endline="276">SaveImage</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1afbd385f1a30708796ed508f8accdae8e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.SaveImage</definition>
        <argsstring>(Texture2D texture, int quality, string imagePath)</argsstring>
        <name>SaveImage</name>
        <qualifiedname>ES3.SaveImage</qualifiedname>
        <param>
          <type>Texture2D</type>
          <declname>texture</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quality</declname>
        </param>
        <param>
          <type>string</type>
          <declname>imagePath</declname>
        </param>
        <briefdescription>
<para>Saves a Texture2D as a PNG or JPG, depending on the file extension used for the filePath. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>texture</parametername>
</parameternamelist>
<parameterdescription>
<para>The Texture2D we want to save as a JPG or PNG.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quality</parametername>
</parameternamelist>
<parameterdescription>
<para>Quality to encode with, where 1 is minimum and 100 is maximum. Note that this only applies to JPGs.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>imagePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the PNG or JPG file we want to create.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="298" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="298" bodyend="301"/>
        <references refid="classES3_1ae30961fd88a6b9c636c4ad613643f114" compoundref="ES3_8cs" startline="273" endline="276">SaveImage</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a895ab71d4ee415f8bd5f05f69ab45736" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.SaveImage</definition>
        <argsstring>(Texture2D texture, int quality, string imagePath, ES3Settings settings)</argsstring>
        <name>SaveImage</name>
        <qualifiedname>ES3.SaveImage</qualifiedname>
        <param>
          <type>Texture2D</type>
          <declname>texture</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quality</declname>
        </param>
        <param>
          <type>string</type>
          <declname>imagePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Saves a Texture2D as a PNG or JPG, depending on the file extension used for the filePath. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>texture</parametername>
</parameternamelist>
<parameterdescription>
<para>The Texture2D we want to save as a JPG or PNG.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quality</parametername>
</parameternamelist>
<parameterdescription>
<para>Quality to encode with, where 1 is minimum and 100 is maximum. Note that this only applies to JPGs.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>imagePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the PNG or JPG file we want to create.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="307" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="307" bodyend="310"/>
        <references refid="classES3_1ae30961fd88a6b9c636c4ad613643f114" compoundref="ES3_8cs" startline="273" endline="276">SaveImage</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1ae9f24d279bf249e9d4e38a15289c3ca1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.SaveImage</definition>
        <argsstring>(Texture2D texture, int quality, ES3Settings settings)</argsstring>
        <name>SaveImage</name>
        <qualifiedname>ES3.SaveImage</qualifiedname>
        <param>
          <type>Texture2D</type>
          <declname>texture</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quality</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Saves a Texture2D as a PNG or JPG, depending on the file extension used for the filePath. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>texture</parametername>
</parameternamelist>
<parameterdescription>
<para>The Texture2D we want to save as a JPG or PNG.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quality</parametername>
</parameternamelist>
<parameterdescription>
<para>Quality to encode with, where 1 is minimum and 100 is maximum. Note that this only applies to JPGs.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="316" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="316" bodyend="331"/>
        <references refid="classES3Settings_1aec222d18f62c320ffbc1648c05514731" compoundref="ES3Settings_8cs" startline="105">ES3Settings.path</references>
        <references refid="classES3_1a1b898fa70f361df94be9ed0ab9bcc942" compoundref="ES3_8cs" startline="118" endline="121">SaveRaw</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a1584b0292679d351ef6be4e63cc62fb6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte[]</type>
        <definition>static byte[] ES3.SaveImageToBytes</definition>
        <argsstring>(Texture2D texture, int quality, ES3.ImageType imageType)</argsstring>
        <name>SaveImageToBytes</name>
        <qualifiedname>ES3.SaveImageToBytes</qualifiedname>
        <param>
          <type>Texture2D</type>
          <declname>texture</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quality</declname>
        </param>
        <param>
          <type>ES3.ImageType</type>
          <declname>imageType</declname>
        </param>
        <briefdescription>
<para>Saves a Texture2D as a PNG or JPG, depending on the file extension used for the filePath. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>texture</parametername>
</parameternamelist>
<parameterdescription>
<para>The Texture2D we want to save as a JPG or PNG.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quality</parametername>
</parameternamelist>
<parameterdescription>
<para>Quality to encode with, where 1 is minimum and 100 is maximum. Note that this only applies to JPGs.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="337" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="337" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1ae103055acd5867d23ee3008e9b03c650" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>object</type>
        <definition>static object ES3.Load</definition>
        <argsstring>(string key)</argsstring>
        <name>Load</name>
        <qualifiedname>ES3.Load</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="353" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="353" bodyend="356"/>
        <referencedby refid="classGameManager_1a229cccd2baab5ebf97e46ed2a92ff8d4" compoundref="GameManager_8cs" startline="656" endline="739">GameManager.LoadPlayerData</referencedby>
        <referencedby refid="classCrewFactory_1ac8ca1d814fa505854ab2871e0c2135fb" compoundref="CrewFactory_8cs" startline="260" endline="309">CrewFactory.RestoreCrewFromES3</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1a615ebe09c1f71227e9e78593db669b93" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>object</type>
        <definition>static object ES3.Load</definition>
        <argsstring>(string key, string filePath)</argsstring>
        <name>Load</name>
        <qualifiedname>ES3.Load</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to load from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="361" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="361" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1ab2b0a323b9a4f801b0c8043060580b74" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>object</type>
        <definition>static object ES3.Load</definition>
        <argsstring>(string key, string filePath, ES3Settings settings)</argsstring>
        <name>Load</name>
        <qualifiedname>ES3.Load</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to load from.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="370" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="370" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a88131ddf4d3eb474c2676d718c13e2ba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>object</type>
        <definition>static object ES3.Load</definition>
        <argsstring>(string key, ES3Settings settings)</argsstring>
        <name>Load</name>
        <qualifiedname>ES3.Load</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="378" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="378" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a171f7170770870518f60a9b4af6654a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>object</type>
        <definition>static object ES3.Load</definition>
        <argsstring>(string key, object defaultValue)</argsstring>
        <name>Load</name>
        <qualifiedname>ES3.Load</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>object</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The value we want to return if the file or key does not exist.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="386" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="386" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1af6d41d61fea898f81b752cbbbe8d39a8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>object</type>
        <definition>static object ES3.Load</definition>
        <argsstring>(string key, string filePath, object defaultValue)</argsstring>
        <name>Load</name>
        <qualifiedname>ES3.Load</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type>object</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to load from.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The value we want to return if the file or key does not exist.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="395" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="395" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a4622468634556ca37b180fede089569a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>object</type>
        <definition>static object ES3.Load</definition>
        <argsstring>(string key, string filePath, object defaultValue, ES3Settings settings)</argsstring>
        <name>Load</name>
        <qualifiedname>ES3.Load</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type>object</type>
          <declname>defaultValue</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to load from.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The value we want to return if the file or key does not exist.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="405" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="405" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a6668e3890a9aa150919f5de03f68cca0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>object</type>
        <definition>static object ES3.Load</definition>
        <argsstring>(string key, object defaultValue, ES3Settings settings)</argsstring>
        <name>Load</name>
        <qualifiedname>ES3.Load</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>object</type>
          <declname>defaultValue</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The value we want to return if the file or key does not exist.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="414" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="414" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a6b869b10a88a19bf9da791409a6b6f05" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T ES3.Load&lt; T &gt;</definition>
        <argsstring>(string key)</argsstring>
        <name>Load&lt; T &gt;</name>
        <qualifiedname>ES3.Load&lt; T &gt;</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the data that we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="422" column="19" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="422" bodyend="425"/>
        <references refid="classES3_1a6b869b10a88a19bf9da791409a6b6f05" compoundref="ES3_8cs" startline="422" endline="425">Load&lt; T &gt;</references>
        <referencedby refid="classES3_1a6b869b10a88a19bf9da791409a6b6f05" compoundref="ES3_8cs" startline="422" endline="425">Load&lt; T &gt;</referencedby>
        <referencedby refid="classES3_1a4cb48ec7db6b60037aa2e92eb71592b0" compoundref="ES3_8cs" startline="431" endline="434">Load&lt; T &gt;</referencedby>
        <referencedby refid="classES3_1ace5df18f23ae273155e5cbc0834f75bc" compoundref="ES3_8cs" startline="441" endline="447">Load&lt; T &gt;</referencedby>
        <referencedby refid="classES3_1a78a05d3108f32ca5b917b16bff6a3d1a" compoundref="ES3_8cs" startline="490" endline="493">Load&lt; T &gt;</referencedby>
        <referencedby refid="classES3_1a51bec5dde60b86559d4f9131482644ec" compoundref="ES3_8cs" startline="501" endline="504">Load&lt; T &gt;</referencedby>
        <referencedby refid="classES3_1a2d76f99c5cdcca4aacfcab5dbe375437" compoundref="ES3_8cs" startline="480" endline="483">Load&lt; T &gt;</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1a4cb48ec7db6b60037aa2e92eb71592b0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T ES3.Load&lt; T &gt;</definition>
        <argsstring>(string key, string filePath)</argsstring>
        <name>Load&lt; T &gt;</name>
        <qualifiedname>ES3.Load&lt; T &gt;</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the data that we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to load from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="431" column="19" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="431" bodyend="434"/>
        <references refid="classES3_1a6b869b10a88a19bf9da791409a6b6f05" compoundref="ES3_8cs" startline="422" endline="425">Load&lt; T &gt;</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1ace5df18f23ae273155e5cbc0834f75bc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T ES3.Load&lt; T &gt;</definition>
        <argsstring>(string key, string filePath, ES3Settings settings)</argsstring>
        <name>Load&lt; T &gt;</name>
        <qualifiedname>ES3.Load&lt; T &gt;</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the data that we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to load from.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="441" column="19" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="441" bodyend="447"/>
        <references refid="classES3_1a6b869b10a88a19bf9da791409a6b6f05" compoundref="ES3_8cs" startline="422" endline="425">Load&lt; T &gt;</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a2ca126385d0ead1e03e6f9e9639afba5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T ES3.Load&lt; T &gt;</definition>
        <argsstring>(string key, ES3Settings settings)</argsstring>
        <name>Load&lt; T &gt;</name>
        <qualifiedname>ES3.Load&lt; T &gt;</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the data that we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="453" column="19" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="453" bodyend="474"/>
        <references refid="classES3Reader_1aaaa29fbf59162a541245da765cefe48f" compoundref="ES3Reader_8cs" startline="337" endline="340">ES3Reader.Create</references>
        <references refid="classES3Settings_1a3213eb287400d8d12776529fb9f70dd8" compoundref="ES3Settings_8cs" startline="162" endline="202">ES3Settings.FullPath</references>
        <references refid="classES3File_1ab0955399b13818f53072d7f53044cad5" compoundref="ES3File_8cs" startline="227" endline="230">ES3File.Load</references>
        <references refid="classES3Settings_1a4d37bdd73f46cb53d997d8300c78451d" compoundref="ES3Settings_8cs" startline="94" endline="102">ES3Settings.location</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a2d76f99c5cdcca4aacfcab5dbe375437" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T ES3.Load&lt; T &gt;</definition>
        <argsstring>(string key, T defaultValue)</argsstring>
        <name>Load&lt; T &gt;</name>
        <qualifiedname>ES3.Load&lt; T &gt;</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the data that we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The value we want to return if the file or key does not exist.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="480" column="19" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="480" bodyend="483"/>
        <references refid="classES3_1a6b869b10a88a19bf9da791409a6b6f05" compoundref="ES3_8cs" startline="422" endline="425">Load&lt; T &gt;</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a78a05d3108f32ca5b917b16bff6a3d1a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T ES3.Load&lt; T &gt;</definition>
        <argsstring>(string key, string filePath, T defaultValue)</argsstring>
        <name>Load&lt; T &gt;</name>
        <qualifiedname>ES3.Load&lt; T &gt;</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type>T</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the data that we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to load from.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The value we want to return if the file or key does not exist.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="490" column="19" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="490" bodyend="493"/>
        <references refid="classES3_1a6b869b10a88a19bf9da791409a6b6f05" compoundref="ES3_8cs" startline="422" endline="425">Load&lt; T &gt;</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a51bec5dde60b86559d4f9131482644ec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T ES3.Load&lt; T &gt;</definition>
        <argsstring>(string key, string filePath, T defaultValue, ES3Settings settings)</argsstring>
        <name>Load&lt; T &gt;</name>
        <qualifiedname>ES3.Load&lt; T &gt;</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type>T</type>
          <declname>defaultValue</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the data that we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to load from.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The value we want to return if the file or key does not exist.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="501" column="19" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="501" bodyend="504"/>
        <references refid="classES3_1a6b869b10a88a19bf9da791409a6b6f05" compoundref="ES3_8cs" startline="422" endline="425">Load&lt; T &gt;</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1adeea8b58bb9c869179e90fb49aa72deb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T ES3.Load&lt; T &gt;</definition>
        <argsstring>(string key, T defaultValue, ES3Settings settings)</argsstring>
        <name>Load&lt; T &gt;</name>
        <qualifiedname>ES3.Load&lt; T &gt;</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T</type>
          <declname>defaultValue</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the data that we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The value we want to return if the file or key does not exist.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="511" column="19" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="511" bodyend="532"/>
        <references refid="classES3Reader_1aaaa29fbf59162a541245da765cefe48f" compoundref="ES3Reader_8cs" startline="337" endline="340">ES3Reader.Create</references>
        <references refid="classES3File_1ab0955399b13818f53072d7f53044cad5" compoundref="ES3File_8cs" startline="227" endline="230">ES3File.Load</references>
        <references refid="classES3Settings_1a4d37bdd73f46cb53d997d8300c78451d" compoundref="ES3Settings_8cs" startline="94" endline="102">ES3Settings.location</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1aff57d6abe84e4b001bae59ddc9ea7ceb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.LoadInto&lt; T &gt;</definition>
        <argsstring>(string key, object obj)</argsstring>
        <name>LoadInto&lt; T &gt;</name>
        <qualifiedname>ES3.LoadInto&lt; T &gt;</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>object</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key into an existing object, rather than creating a new instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>The object we want to load the value into.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="539" column="19" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="539" bodyend="542"/>
        <referencedby refid="classES3_1a93b50f631486a9b27c41e7113a6a6aa1" compoundref="ES3_8cs" startline="586" endline="589">LoadInto&lt; T &gt;</referencedby>
        <referencedby refid="classES3_1a8b9ea398af360b83d8057e92c8f0ce22" compoundref="ES3_8cs" startline="597" endline="600">LoadInto&lt; T &gt;</referencedby>
        <referencedby refid="classES3_1a5c9f255a90cd4a8fdc9522ff7e0e2216" compoundref="ES3_8cs" startline="576" endline="579">LoadInto&lt; T &gt;</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1a1f7893973bc2665fe97512be2e8f68c4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.LoadInto</definition>
        <argsstring>(string key, string filePath, object obj)</argsstring>
        <name>LoadInto</name>
        <qualifiedname>ES3.LoadInto</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type>object</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key into an existing object, rather than creating a new instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to load from.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>The object we want to load the value into.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="548" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="548" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a17fdd0037295f4538d5c901e6078673d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.LoadInto</definition>
        <argsstring>(string key, string filePath, object obj, ES3Settings settings)</argsstring>
        <name>LoadInto</name>
        <qualifiedname>ES3.LoadInto</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type>object</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key into an existing object, rather than creating a new instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to load from.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>The object we want to load the value into.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="558" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="558" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a04828c0c945bfba0d585d3018366813b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.LoadInto</definition>
        <argsstring>(string key, object obj, ES3Settings settings)</argsstring>
        <name>LoadInto</name>
        <qualifiedname>ES3.LoadInto</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>object</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key into an existing object, rather than creating a new instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>The object we want to load the value into.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="567" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="567" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a5c9f255a90cd4a8fdc9522ff7e0e2216" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.LoadInto&lt; T &gt;</definition>
        <argsstring>(string key, T obj)</argsstring>
        <name>LoadInto&lt; T &gt;</name>
        <qualifiedname>ES3.LoadInto&lt; T &gt;</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key into an existing object, rather than creating a new instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the data that we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>The object we want to load the value into.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="576" column="19" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="576" bodyend="579"/>
        <references refid="classES3_1aff57d6abe84e4b001bae59ddc9ea7ceb" compoundref="ES3_8cs" startline="539" endline="542">LoadInto&lt; T &gt;</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a93b50f631486a9b27c41e7113a6a6aa1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.LoadInto&lt; T &gt;</definition>
        <argsstring>(string key, string filePath, T obj)</argsstring>
        <name>LoadInto&lt; T &gt;</name>
        <qualifiedname>ES3.LoadInto&lt; T &gt;</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type>T</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key into an existing object, rather than creating a new instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the data that we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to load from.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>The object we want to load the value into.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="586" column="19" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="586" bodyend="589"/>
        <references refid="classES3_1aff57d6abe84e4b001bae59ddc9ea7ceb" compoundref="ES3_8cs" startline="539" endline="542">LoadInto&lt; T &gt;</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a8b9ea398af360b83d8057e92c8f0ce22" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.LoadInto&lt; T &gt;</definition>
        <argsstring>(string key, string filePath, T obj, ES3Settings settings)</argsstring>
        <name>LoadInto&lt; T &gt;</name>
        <qualifiedname>ES3.LoadInto&lt; T &gt;</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type>T</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key into an existing object, rather than creating a new instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the data that we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to load from.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>The object we want to load the value into.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="597" column="19" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="597" bodyend="600"/>
        <references refid="classES3_1aff57d6abe84e4b001bae59ddc9ea7ceb" compoundref="ES3_8cs" startline="539" endline="542">LoadInto&lt; T &gt;</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a9e9b661927a3aec2d697a51e636dc2b3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.LoadInto&lt; T &gt;</definition>
        <argsstring>(string key, T obj, ES3Settings settings)</argsstring>
        <name>LoadInto&lt; T &gt;</name>
        <qualifiedname>ES3.LoadInto&lt; T &gt;</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key into an existing object, rather than creating a new instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the data that we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>The object we want to load the value into.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="607" column="19" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="607" bodyend="633"/>
        <references refid="classES3Reader_1aaaa29fbf59162a541245da765cefe48f" compoundref="ES3Reader_8cs" startline="337" endline="340">ES3Reader.Create</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1aa732dc418836c69edea3c5bc352d9324" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string ES3.LoadString</definition>
        <argsstring>(string key, string defaultValue, ES3Settings settings)</argsstring>
        <name>LoadString</name>
        <qualifiedname>ES3.LoadString</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>defaultValue</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The value we want to return if the file or key does not exist.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="641" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="641" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1abd868f34bcc08125b977c2afcda170aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string ES3.LoadString</definition>
        <argsstring>(string key, string defaultValue, string filePath=null, ES3Settings settings=null)</argsstring>
        <name>LoadString</name>
        <qualifiedname>ES3.LoadString</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>defaultValue</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
          <defval>null</defval>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Loads the value from a file with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key which identifies the value we want to load.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The value we want to return if the file or key does not exist.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to load from.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="651" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="651" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a5ffd0b12e24d6a33c7bd22e0e8ca149c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte[]</type>
        <definition>static byte[] ES3.LoadRawBytes</definition>
        <argsstring>()</argsstring>
        <name>LoadRawBytes</name>
        <qualifiedname>ES3.LoadRawBytes</qualifiedname>
        <briefdescription>
<para>Loads the default file as a byte array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="661" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="661" bodyend="664"/>
        <references refid="classES3_1a5ffd0b12e24d6a33c7bd22e0e8ca149c" compoundref="ES3_8cs" startline="661" endline="664">LoadRawBytes</references>
        <referencedby refid="classES3_1a1fa3d9ef535e4e6d9696c1c9f2e6dd27" compoundref="ES3_8cs" startline="780" endline="784">LoadImage</referencedby>
        <referencedby refid="classES3_1a5ffd0b12e24d6a33c7bd22e0e8ca149c" compoundref="ES3_8cs" startline="661" endline="664">LoadRawBytes</referencedby>
        <referencedby refid="classES3_1ad91b4a9e9f28c6ef447dee2a375a8ecf" compoundref="ES3_8cs" startline="668" endline="671">LoadRawBytes</referencedby>
        <referencedby refid="classES3_1a81ae0bbf85afa2a38f5bde614074a8a3" compoundref="ES3_8cs" startline="676" endline="679">LoadRawBytes</referencedby>
        <referencedby refid="classES3_1a7d8ab92dcf67076c015e1cb9cbea915a" compoundref="ES3_8cs" startline="756" endline="760">LoadRawString</referencedby>
        <referencedby refid="classES3Cloud_1a8fd40839975c47d733acfda31a272ba6" compoundref="ES3Cloud_8cs" startline="256" endline="259">ES3Cloud.UploadFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1ad91b4a9e9f28c6ef447dee2a375a8ecf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte[]</type>
        <definition>static byte[] ES3.LoadRawBytes</definition>
        <argsstring>(string filePath)</argsstring>
        <name>LoadRawBytes</name>
        <qualifiedname>ES3.LoadRawBytes</qualifiedname>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Loads a file as a byte array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to load as a byte array.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="668" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="668" bodyend="671"/>
        <references refid="classES3_1a5ffd0b12e24d6a33c7bd22e0e8ca149c" compoundref="ES3_8cs" startline="661" endline="664">LoadRawBytes</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a81ae0bbf85afa2a38f5bde614074a8a3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte[]</type>
        <definition>static byte[] ES3.LoadRawBytes</definition>
        <argsstring>(string filePath, ES3Settings settings)</argsstring>
        <name>LoadRawBytes</name>
        <qualifiedname>ES3.LoadRawBytes</qualifiedname>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Loads a file as a byte array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to load as a byte array.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="676" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="676" bodyend="679"/>
        <references refid="classES3_1a5ffd0b12e24d6a33c7bd22e0e8ca149c" compoundref="ES3_8cs" startline="661" endline="664">LoadRawBytes</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1abbc359ef4bb045756f28cc657f8676ea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte[]</type>
        <definition>static byte[] ES3.LoadRawBytes</definition>
        <argsstring>(ES3Settings settings)</argsstring>
        <name>LoadRawBytes</name>
        <qualifiedname>ES3.LoadRawBytes</qualifiedname>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Loads the default file as a byte array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="683" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="683" bodyend="730"/>
        <references refid="classES3Settings_1a3213eb287400d8d12776529fb9f70dd8" compoundref="ES3Settings_8cs" startline="162" endline="202">ES3Settings.FullPath</references>
        <references refid="classES3File_1a5ee7c5b91aca586fa7a12fcb6da59369" compoundref="ES3File_8cs" startline="304" endline="313">ES3File.LoadRawBytes</references>
        <references refid="classES3Settings_1a4d37bdd73f46cb53d997d8300c78451d" compoundref="ES3Settings_8cs" startline="94" endline="102">ES3Settings.location</references>
        <references refid="classES3Settings_1aec222d18f62c320ffbc1648c05514731" compoundref="ES3Settings_8cs" startline="105">ES3Settings.path</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a7f1480b5c018edb381218a51b2a8644c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string ES3.LoadRawString</definition>
        <argsstring>()</argsstring>
        <name>LoadRawString</name>
        <qualifiedname>ES3.LoadRawString</qualifiedname>
        <briefdescription>
<para>Loads the default file as a byte array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="733" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="733" bodyend="736"/>
        <references refid="classES3_1a7f1480b5c018edb381218a51b2a8644c" compoundref="ES3_8cs" startline="733" endline="736">LoadRawString</references>
        <referencedby refid="classES3_1a7f1480b5c018edb381218a51b2a8644c" compoundref="ES3_8cs" startline="733" endline="736">LoadRawString</referencedby>
        <referencedby refid="classES3_1ad8093c165a7ee2fce2e153eb9e858a40" compoundref="ES3_8cs" startline="741" endline="744">LoadRawString</referencedby>
        <referencedby refid="classES3_1ab25b09c29ab26468773638915a9782ac" compoundref="ES3_8cs" startline="749" endline="752">LoadRawString</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1ad8093c165a7ee2fce2e153eb9e858a40" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string ES3.LoadRawString</definition>
        <argsstring>(string filePath)</argsstring>
        <name>LoadRawString</name>
        <qualifiedname>ES3.LoadRawString</qualifiedname>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Loads a file as a byte array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to load as a byte array.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="741" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="741" bodyend="744"/>
        <references refid="classES3_1a7f1480b5c018edb381218a51b2a8644c" compoundref="ES3_8cs" startline="733" endline="736">LoadRawString</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1ab25b09c29ab26468773638915a9782ac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string ES3.LoadRawString</definition>
        <argsstring>(string filePath, ES3Settings settings)</argsstring>
        <name>LoadRawString</name>
        <qualifiedname>ES3.LoadRawString</qualifiedname>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Loads a file as a byte array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to load as a byte array.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="749" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="749" bodyend="752"/>
        <references refid="classES3_1a7f1480b5c018edb381218a51b2a8644c" compoundref="ES3_8cs" startline="733" endline="736">LoadRawString</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a7d8ab92dcf67076c015e1cb9cbea915a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string ES3.LoadRawString</definition>
        <argsstring>(ES3Settings settings)</argsstring>
        <name>LoadRawString</name>
        <qualifiedname>ES3.LoadRawString</qualifiedname>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Loads the default file as a byte array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="756" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="756" bodyend="760"/>
        <references refid="classES3Settings_1a965bf4d3ac76b0037b3b9c31fde4420c" compoundref="ES3Settings_8cs" startline="121">ES3Settings.encoding</references>
        <references refid="classES3_1a5ffd0b12e24d6a33c7bd22e0e8ca149c" compoundref="ES3_8cs" startline="661" endline="664">LoadRawBytes</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a312edb7789ae24f94a043bc27d16fe21" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Texture2D</type>
        <definition>static Texture2D ES3.LoadImage</definition>
        <argsstring>(string imagePath)</argsstring>
        <name>LoadImage</name>
        <qualifiedname>ES3.LoadImage</qualifiedname>
        <param>
          <type>string</type>
          <declname>imagePath</declname>
        </param>
        <briefdescription>
<para>Loads a PNG or JPG as a Texture2D. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>imagePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the PNG or JPG file we want to load as a Texture2D.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="765" column="29" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="765" bodyend="768"/>
        <references refid="classES3_1a312edb7789ae24f94a043bc27d16fe21" compoundref="ES3_8cs" startline="765" endline="768">LoadImage</references>
        <referencedby refid="classES3_1a1fa3d9ef535e4e6d9696c1c9f2e6dd27" compoundref="ES3_8cs" startline="780" endline="784">LoadImage</referencedby>
        <referencedby refid="classES3_1a312edb7789ae24f94a043bc27d16fe21" compoundref="ES3_8cs" startline="765" endline="768">LoadImage</referencedby>
        <referencedby refid="classES3_1a864b245bab2b2155307cdf260c499bfe" compoundref="ES3_8cs" startline="773" endline="776">LoadImage</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1a864b245bab2b2155307cdf260c499bfe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Texture2D</type>
        <definition>static Texture2D ES3.LoadImage</definition>
        <argsstring>(string imagePath, ES3Settings settings)</argsstring>
        <name>LoadImage</name>
        <qualifiedname>ES3.LoadImage</qualifiedname>
        <param>
          <type>string</type>
          <declname>imagePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Loads a PNG or JPG as a Texture2D. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>imagePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the PNG or JPG file we want to load as a Texture2D.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="773" column="29" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="773" bodyend="776"/>
        <references refid="classES3_1a312edb7789ae24f94a043bc27d16fe21" compoundref="ES3_8cs" startline="765" endline="768">LoadImage</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a1fa3d9ef535e4e6d9696c1c9f2e6dd27" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Texture2D</type>
        <definition>static Texture2D ES3.LoadImage</definition>
        <argsstring>(ES3Settings settings)</argsstring>
        <name>LoadImage</name>
        <qualifiedname>ES3.LoadImage</qualifiedname>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Loads a PNG or JPG as a Texture2D. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="780" column="29" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="780" bodyend="784"/>
        <references refid="classES3_1a312edb7789ae24f94a043bc27d16fe21" compoundref="ES3_8cs" startline="765" endline="768">LoadImage</references>
        <references refid="classES3_1a5ffd0b12e24d6a33c7bd22e0e8ca149c" compoundref="ES3_8cs" startline="661" endline="664">LoadRawBytes</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a8d7eb011865db61cd792fc5fd1f48ef3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Texture2D</type>
        <definition>static Texture2D ES3.LoadImage</definition>
        <argsstring>(byte[] bytes)</argsstring>
        <name>LoadImage</name>
        <qualifiedname>ES3.LoadImage</qualifiedname>
        <param>
          <type>byte[]</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
<para>Loads a PNG or JPG as a Texture2D. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The raw bytes of the PNG or JPG.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="788" column="29" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="788" bodyend="793"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a4fbae859a155d31d6d0a2a442658bbe4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AudioClip</type>
        <definition>static AudioClip ES3.LoadAudio</definition>
        <argsstring>(string audioFilePath)</argsstring>
        <name>LoadAudio</name>
        <qualifiedname>ES3.LoadAudio</qualifiedname>
        <param>
          <type>string</type>
          <declname>audioFilePath</declname>
        </param>
        <briefdescription>
<para>Loads an audio file as an AudioClip. Note that MP3 files are not supported on standalone platforms and Ogg Vorbis files are not supported on mobile platforms. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>imagePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the audio file we want to load as an AudioClip.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="797" column="29" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="797" bodyend="808"/>
        <references refid="classES3_1a4fbae859a155d31d6d0a2a442658bbe4" compoundref="ES3_8cs" startline="797" endline="808">LoadAudio</references>
        <referencedby refid="classES3_1a4fbae859a155d31d6d0a2a442658bbe4" compoundref="ES3_8cs" startline="797" endline="808">LoadAudio</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1aac20818fac486aa739d4789ac7b77c8b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AudioClip</type>
        <definition>static AudioClip ES3.LoadAudio</definition>
        <argsstring>(string audioFilePath, ES3Settings settings)</argsstring>
        <name>LoadAudio</name>
        <qualifiedname>ES3.LoadAudio</qualifiedname>
        <param>
          <type>string</type>
          <declname>audioFilePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Loads an audio file as an AudioClip. Note that MP3 files are not supported on standalone platforms and Ogg Vorbis files are not supported on mobile platforms. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>imagePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the audio file we want to load as an AudioClip.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="813" column="29" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="813" bodyend="879"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a9b185633000d7117bb979dabed870730" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte[]</type>
        <definition>static byte[] ES3.Serialize&lt; T &gt;</definition>
        <argsstring>(T value, ES3Settings settings=null)</argsstring>
        <name>Serialize&lt; T &gt;</name>
        <qualifiedname>ES3.Serialize&lt; T &gt;</qualifiedname>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="885" column="19" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="885" bodyend="888"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1ac8f17369c867d72b27d1849c122a9677" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T ES3.Deserialize&lt; T &gt;</definition>
        <argsstring>(byte[] bytes, ES3Settings settings=null)</argsstring>
        <name>Deserialize&lt; T &gt;</name>
        <qualifiedname>ES3.Deserialize&lt; T &gt;</qualifiedname>
        <param>
          <type>byte[]</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="910" column="19" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="910" bodyend="913"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a1562650d48a90348bd45df57c8346c43" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.DeserializeInto&lt; T &gt;</definition>
        <argsstring>(byte[] bytes, T obj, ES3Settings settings=null)</argsstring>
        <name>DeserializeInto&lt; T &gt;</name>
        <qualifiedname>ES3.DeserializeInto&lt; T &gt;</qualifiedname>
        <param>
          <type>byte[]</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>T</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="926" column="19" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="926" bodyend="929"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a5b6ee5188f250ddeb1b38235cdb7cfdc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.DeserializeInto&lt; T &gt;</definition>
        <argsstring>(ES3Types.ES3Type type, byte[] bytes, T obj, ES3Settings settings=null)</argsstring>
        <name>DeserializeInto&lt; T &gt;</name>
        <qualifiedname>ES3.DeserializeInto&lt; T &gt;</qualifiedname>
        <param>
          <type><ref refid="classES3Types_1_1ES3Type" kindref="compound">ES3Types.ES3Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>byte[]</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>T</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="931" column="19" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="931" bodyend="939"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a14332f50a81aec36d2bee586ecc65325" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte[]</type>
        <definition>static byte[] ES3.EncryptBytes</definition>
        <argsstring>(byte[] bytes, string password=null)</argsstring>
        <name>EncryptBytes</name>
        <qualifiedname>ES3.EncryptBytes</qualifiedname>
        <param>
          <type>byte[]</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>string</type>
          <declname>password</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="947" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="947" bodyend="952"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a9913fa21590da2d606586e21a2a678d2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte[]</type>
        <definition>static byte[] ES3.DecryptBytes</definition>
        <argsstring>(byte[] bytes, string password=null)</argsstring>
        <name>DecryptBytes</name>
        <qualifiedname>ES3.DecryptBytes</qualifiedname>
        <param>
          <type>byte[]</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>string</type>
          <declname>password</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="954" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="954" bodyend="959"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a09e38c01655acaa09aa9b258e592f010" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string ES3.EncryptString</definition>
        <argsstring>(string str, string password=null)</argsstring>
        <name>EncryptString</name>
        <qualifiedname>ES3.EncryptString</qualifiedname>
        <param>
          <type>string</type>
          <declname>str</declname>
        </param>
        <param>
          <type>string</type>
          <declname>password</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="961" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="961" bodyend="964"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a6323e1bd166b80160624414e4bda9751" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string ES3.DecryptString</definition>
        <argsstring>(string str, string password=null)</argsstring>
        <name>DecryptString</name>
        <qualifiedname>ES3.DecryptString</qualifiedname>
        <param>
          <type>string</type>
          <declname>str</declname>
        </param>
        <param>
          <type>string</type>
          <declname>password</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="966" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="966" bodyend="969"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a7d3d31d6de4a05417020da84254f52ba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte[]</type>
        <definition>static byte[] ES3.CompressBytes</definition>
        <argsstring>(byte[] bytes)</argsstring>
        <name>CompressBytes</name>
        <qualifiedname>ES3.CompressBytes</qualifiedname>
        <param>
          <type>byte[]</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="973" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="973" bodyend="987"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a5971f92f0207c171bba498f7df84318f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte[]</type>
        <definition>static byte[] ES3.DecompressBytes</definition>
        <argsstring>(byte[] bytes)</argsstring>
        <name>DecompressBytes</name>
        <qualifiedname>ES3.DecompressBytes</qualifiedname>
        <param>
          <type>byte[]</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="989" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="989" bodyend="1005"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a046afdffb43011ab67665d4c160b5564" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string ES3.CompressString</definition>
        <argsstring>(string str)</argsstring>
        <name>CompressString</name>
        <qualifiedname>ES3.CompressString</qualifiedname>
        <param>
          <type>string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1007" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1007" bodyend="1010"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a2bc12a0678764d9914fb0361c6dacf96" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string ES3.DecompressString</definition>
        <argsstring>(string str)</argsstring>
        <name>DecompressString</name>
        <qualifiedname>ES3.DecompressString</qualifiedname>
        <param>
          <type>string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1012" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1012" bodyend="1015"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a250f0401b672b19068817a0eb48efb41" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.DeleteFile</definition>
        <argsstring>()</argsstring>
        <name>DeleteFile</name>
        <qualifiedname>ES3.DeleteFile</qualifiedname>
        <briefdescription>
<para>Deletes the default file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1018" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1018" bodyend="1021"/>
        <references refid="classES3_1a250f0401b672b19068817a0eb48efb41" compoundref="ES3_8cs" startline="1018" endline="1021">DeleteFile</references>
        <referencedby refid="classES3_1a250f0401b672b19068817a0eb48efb41" compoundref="ES3_8cs" startline="1018" endline="1021">DeleteFile</referencedby>
        <referencedby refid="classES3_1a6712b1bdad7570f251077a00093a762a" compoundref="ES3_8cs" startline="1025" endline="1028">DeleteFile</referencedby>
        <referencedby refid="classES3_1a88497c47446f3bad5d9a184dad206f75" compoundref="ES3_8cs" startline="1033" endline="1036">DeleteFile</referencedby>
        <referencedby refid="classES3File_1a01960acc16041c5e59b91f3c5b1139ff" compoundref="ES3File_8cs" startline="108" endline="140">ES3File.Sync</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1a6712b1bdad7570f251077a00093a762a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.DeleteFile</definition>
        <argsstring>(string filePath)</argsstring>
        <name>DeleteFile</name>
        <qualifiedname>ES3.DeleteFile</qualifiedname>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Deletes the file at the given path using the default settings. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we wish to delete.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1025" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1025" bodyend="1028"/>
        <references refid="classES3_1a250f0401b672b19068817a0eb48efb41" compoundref="ES3_8cs" startline="1018" endline="1021">DeleteFile</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a88497c47446f3bad5d9a184dad206f75" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.DeleteFile</definition>
        <argsstring>(string filePath, ES3Settings settings)</argsstring>
        <name>DeleteFile</name>
        <qualifiedname>ES3.DeleteFile</qualifiedname>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Deletes the file at the given path using the settings provided. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we wish to delete.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1033" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1033" bodyend="1036"/>
        <references refid="classES3_1a250f0401b672b19068817a0eb48efb41" compoundref="ES3_8cs" startline="1018" endline="1021">DeleteFile</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a30f00504a6c1c01419619b9c57ad4d71" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.DeleteFile</definition>
        <argsstring>(ES3Settings settings)</argsstring>
        <name>DeleteFile</name>
        <qualifiedname>ES3.DeleteFile</qualifiedname>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Deletes the file specified by the <ref refid="classES3Settings" kindref="compound">ES3Settings</ref> object provided as a parameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1040" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1040" bodyend="1050"/>
        <references refid="classES3Settings_1a3213eb287400d8d12776529fb9f70dd8" compoundref="ES3Settings_8cs" startline="162" endline="202">ES3Settings.FullPath</references>
        <references refid="classES3Settings_1a4d37bdd73f46cb53d997d8300c78451d" compoundref="ES3Settings_8cs" startline="94" endline="102">ES3Settings.location</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a199dddfd7792430abc4cdec0d3b13e5c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.CopyFile</definition>
        <argsstring>(string oldFilePath, string newFilePath)</argsstring>
        <name>CopyFile</name>
        <qualifiedname>ES3.CopyFile</qualifiedname>
        <param>
          <type>string</type>
          <declname>oldFilePath</declname>
        </param>
        <param>
          <type>string</type>
          <declname>newFilePath</declname>
        </param>
        <briefdescription>
<para>Copies a file from one path to another. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oldFilePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to copy.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newFilePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the copy we want to create.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1055" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1055" bodyend="1058"/>
        <references refid="classES3_1a199dddfd7792430abc4cdec0d3b13e5c" compoundref="ES3_8cs" startline="1055" endline="1058">CopyFile</references>
        <referencedby refid="classES3_1ae2128be509250e2000b9df2339dbd123" compoundref="ES3_8cs" startline="1173" endline="1191">CopyDirectory</referencedby>
        <referencedby refid="classES3_1a199dddfd7792430abc4cdec0d3b13e5c" compoundref="ES3_8cs" startline="1055" endline="1058">CopyFile</referencedby>
        <referencedby refid="classES3_1acd9086d2026ee6c99fbf9f7286b4b8a4" compoundref="ES3_8cs" startline="1065" endline="1068">CopyFile</referencedby>
        <referencedby refid="classES3_1a35dda269ec93dec2fe7d33ba03d9e9bc" compoundref="ES3_8cs" startline="1559" endline="1563">CreateBackup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1acd9086d2026ee6c99fbf9f7286b4b8a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.CopyFile</definition>
        <argsstring>(string oldFilePath, string newFilePath, ES3Settings oldSettings, ES3Settings newSettings)</argsstring>
        <name>CopyFile</name>
        <qualifiedname>ES3.CopyFile</qualifiedname>
        <param>
          <type>string</type>
          <declname>oldFilePath</declname>
        </param>
        <param>
          <type>string</type>
          <declname>newFilePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>oldSettings</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>newSettings</declname>
        </param>
        <briefdescription>
<para>Copies a file from one location to another, using the <ref refid="classES3Settings" kindref="compound">ES3Settings</ref> provided to override any default settings. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oldFilePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to copy.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newFilePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the copy we want to create.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use when copying the old file.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use when creating the new file.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1065" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1065" bodyend="1068"/>
        <references refid="classES3_1a199dddfd7792430abc4cdec0d3b13e5c" compoundref="ES3_8cs" startline="1055" endline="1058">CopyFile</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1abb9f5fac7b11ba87db1d7cfb7f9c447a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.CopyFile</definition>
        <argsstring>(ES3Settings oldSettings, ES3Settings newSettings)</argsstring>
        <name>CopyFile</name>
        <qualifiedname>ES3.CopyFile</qualifiedname>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>oldSettings</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>newSettings</declname>
        </param>
        <briefdescription>
<para>Copies a file from one location to another, using the <ref refid="classES3Settings" kindref="compound">ES3Settings</ref> provided to determine the locations. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oldSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use when copying the old file.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use when creating the new file.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1073" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1073" bodyend="1102"/>
        <references refid="classES3Settings_1a3213eb287400d8d12776529fb9f70dd8" compoundref="ES3Settings_8cs" startline="162" endline="202">ES3Settings.FullPath</references>
        <references refid="classES3Settings_1a4d37bdd73f46cb53d997d8300c78451d" compoundref="ES3Settings_8cs" startline="94" endline="102">ES3Settings.location</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a978f401aa26462fd78ebdb7888584789" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.RenameFile</definition>
        <argsstring>(string oldFilePath, string newFilePath)</argsstring>
        <name>RenameFile</name>
        <qualifiedname>ES3.RenameFile</qualifiedname>
        <param>
          <type>string</type>
          <declname>oldFilePath</declname>
        </param>
        <param>
          <type>string</type>
          <declname>newFilePath</declname>
        </param>
        <briefdescription>
<para>Renames a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oldFilePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to rename.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newFilePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path we want to rename the file to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1107" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1107" bodyend="1110"/>
        <references refid="classES3_1a978f401aa26462fd78ebdb7888584789" compoundref="ES3_8cs" startline="1107" endline="1110">RenameFile</references>
        <referencedby refid="classES3_1a978f401aa26462fd78ebdb7888584789" compoundref="ES3_8cs" startline="1107" endline="1110">RenameFile</referencedby>
        <referencedby refid="classES3_1a6cf64a60a5b805debde982e6a3d3cf2f" compoundref="ES3_8cs" startline="1117" endline="1120">RenameFile</referencedby>
        <referencedby refid="classES3_1a05d1e47a259d390de967cd0c9bb3374c" compoundref="ES3_8cs" startline="1585" endline="1595">RestoreBackup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1a6cf64a60a5b805debde982e6a3d3cf2f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.RenameFile</definition>
        <argsstring>(string oldFilePath, string newFilePath, ES3Settings oldSettings, ES3Settings newSettings)</argsstring>
        <name>RenameFile</name>
        <qualifiedname>ES3.RenameFile</qualifiedname>
        <param>
          <type>string</type>
          <declname>oldFilePath</declname>
        </param>
        <param>
          <type>string</type>
          <declname>newFilePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>oldSettings</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>newSettings</declname>
        </param>
        <briefdescription>
<para>Renames a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oldFilePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to rename.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newFilePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path we want to rename the file to.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings for the file we want to rename.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings for the file we want our source file to be renamed to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1117" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1117" bodyend="1120"/>
        <references refid="classES3_1a978f401aa26462fd78ebdb7888584789" compoundref="ES3_8cs" startline="1107" endline="1110">RenameFile</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a2cbe7b9dab34be812292b51fbefe981a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.RenameFile</definition>
        <argsstring>(ES3Settings oldSettings, ES3Settings newSettings)</argsstring>
        <name>RenameFile</name>
        <qualifiedname>ES3.RenameFile</qualifiedname>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>oldSettings</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>newSettings</declname>
        </param>
        <briefdescription>
<para>Renames a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oldSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings for the file we want to rename.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings for the file we want our source file to be renamed to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1125" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1125" bodyend="1150"/>
        <references refid="classES3Settings_1a3213eb287400d8d12776529fb9f70dd8" compoundref="ES3Settings_8cs" startline="162" endline="202">ES3Settings.FullPath</references>
        <references refid="classES3Settings_1a4d37bdd73f46cb53d997d8300c78451d" compoundref="ES3Settings_8cs" startline="94" endline="102">ES3Settings.location</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1af95f61bc3b7e9f40308c0738d019d5d5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.CopyDirectory</definition>
        <argsstring>(string oldDirectoryPath, string newDirectoryPath)</argsstring>
        <name>CopyDirectory</name>
        <qualifiedname>ES3.CopyDirectory</qualifiedname>
        <param>
          <type>string</type>
          <declname>oldDirectoryPath</declname>
        </param>
        <param>
          <type>string</type>
          <declname>newDirectoryPath</declname>
        </param>
        <briefdescription>
<para>Copies a file from one path to another. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oldDirectoryPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the directory we want to copy.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newDirectoryPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the copy we want to create.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1155" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1155" bodyend="1158"/>
        <references refid="classES3_1af95f61bc3b7e9f40308c0738d019d5d5" compoundref="ES3_8cs" startline="1155" endline="1158">CopyDirectory</references>
        <referencedby refid="classES3_1ae2128be509250e2000b9df2339dbd123" compoundref="ES3_8cs" startline="1173" endline="1191">CopyDirectory</referencedby>
        <referencedby refid="classES3_1af95f61bc3b7e9f40308c0738d019d5d5" compoundref="ES3_8cs" startline="1155" endline="1158">CopyDirectory</referencedby>
        <referencedby refid="classES3_1a448e7af968682b74282054f45a80890a" compoundref="ES3_8cs" startline="1165" endline="1168">CopyDirectory</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1a448e7af968682b74282054f45a80890a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.CopyDirectory</definition>
        <argsstring>(string oldDirectoryPath, string newDirectoryPath, ES3Settings oldSettings, ES3Settings newSettings)</argsstring>
        <name>CopyDirectory</name>
        <qualifiedname>ES3.CopyDirectory</qualifiedname>
        <param>
          <type>string</type>
          <declname>oldDirectoryPath</declname>
        </param>
        <param>
          <type>string</type>
          <declname>newDirectoryPath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>oldSettings</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>newSettings</declname>
        </param>
        <briefdescription>
<para>Copies a file from one location to another, using the <ref refid="classES3Settings" kindref="compound">ES3Settings</ref> provided to override any default settings. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oldDirectoryPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the directory we want to copy.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newDirectoryPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the copy we want to create.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use when copying the old directory.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use when creating the new directory.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1165" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1165" bodyend="1168"/>
        <references refid="classES3_1af95f61bc3b7e9f40308c0738d019d5d5" compoundref="ES3_8cs" startline="1155" endline="1158">CopyDirectory</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1ae2128be509250e2000b9df2339dbd123" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.CopyDirectory</definition>
        <argsstring>(ES3Settings oldSettings, ES3Settings newSettings)</argsstring>
        <name>CopyDirectory</name>
        <qualifiedname>ES3.CopyDirectory</qualifiedname>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>oldSettings</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>newSettings</declname>
        </param>
        <briefdescription>
<para>Copies a file from one location to another, using the <ref refid="classES3Settings" kindref="compound">ES3Settings</ref> provided to determine the locations. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oldSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use when copying the old file.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use when creating the new file.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1173" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1173" bodyend="1191"/>
        <references refid="classES3_1af95f61bc3b7e9f40308c0738d019d5d5" compoundref="ES3_8cs" startline="1155" endline="1158">CopyDirectory</references>
        <references refid="classES3_1a199dddfd7792430abc4cdec0d3b13e5c" compoundref="ES3_8cs" startline="1055" endline="1058">CopyFile</references>
        <references refid="classES3_1a2a44b91e3315e24c98665de92d3f03da" compoundref="ES3_8cs" startline="1385" endline="1388">DirectoryExists</references>
        <references refid="classES3Settings_1a3213eb287400d8d12776529fb9f70dd8" compoundref="ES3Settings_8cs" startline="162" endline="202">ES3Settings.FullPath</references>
        <references refid="classES3_1a543ec50b060c1454e530c49ff5b30c09" compoundref="ES3_8cs" startline="1499" endline="1502">GetDirectories</references>
        <references refid="classES3_1a6501d17e4b57287c7f81645168540dfa" compoundref="ES3_8cs" startline="1459" endline="1470">GetFiles</references>
        <references refid="classES3Settings_1a4d37bdd73f46cb53d997d8300c78451d" compoundref="ES3Settings_8cs" startline="94" endline="102">ES3Settings.location</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a44650d507fe6dcce4b7d975cef2a06a7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.RenameDirectory</definition>
        <argsstring>(string oldDirectoryPath, string newDirectoryPath)</argsstring>
        <name>RenameDirectory</name>
        <qualifiedname>ES3.RenameDirectory</qualifiedname>
        <param>
          <type>string</type>
          <declname>oldDirectoryPath</declname>
        </param>
        <param>
          <type>string</type>
          <declname>newDirectoryPath</declname>
        </param>
        <briefdescription>
<para>Renames a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oldDirectoryPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to rename.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newDirectoryPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path we want to rename the file to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1196" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1196" bodyend="1199"/>
        <references refid="classES3_1a44650d507fe6dcce4b7d975cef2a06a7" compoundref="ES3_8cs" startline="1196" endline="1199">RenameDirectory</references>
        <referencedby refid="classES3_1a44650d507fe6dcce4b7d975cef2a06a7" compoundref="ES3_8cs" startline="1196" endline="1199">RenameDirectory</referencedby>
        <referencedby refid="classES3_1a3599816abfce762fc647b0812c4dfffa" compoundref="ES3_8cs" startline="1206" endline="1209">RenameDirectory</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1a3599816abfce762fc647b0812c4dfffa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.RenameDirectory</definition>
        <argsstring>(string oldDirectoryPath, string newDirectoryPath, ES3Settings oldSettings, ES3Settings newSettings)</argsstring>
        <name>RenameDirectory</name>
        <qualifiedname>ES3.RenameDirectory</qualifiedname>
        <param>
          <type>string</type>
          <declname>oldDirectoryPath</declname>
        </param>
        <param>
          <type>string</type>
          <declname>newDirectoryPath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>oldSettings</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>newSettings</declname>
        </param>
        <briefdescription>
<para>Renames a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oldDirectoryPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to rename.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newDirectoryPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path we want to rename the file to.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings for the file we want to rename.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings for the file we want our source file to be renamed to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1206" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1206" bodyend="1209"/>
        <references refid="classES3_1a44650d507fe6dcce4b7d975cef2a06a7" compoundref="ES3_8cs" startline="1196" endline="1199">RenameDirectory</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a1f08959e0798cb2109999c0a76a4d008" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.RenameDirectory</definition>
        <argsstring>(ES3Settings oldSettings, ES3Settings newSettings)</argsstring>
        <name>RenameDirectory</name>
        <qualifiedname>ES3.RenameDirectory</qualifiedname>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>oldSettings</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>newSettings</declname>
        </param>
        <briefdescription>
<para>Renames a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oldSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings for the file we want to rename.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings for the file we want our source file to be renamed to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1214" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1214" bodyend="1228"/>
        <references refid="classES3Settings_1a3213eb287400d8d12776529fb9f70dd8" compoundref="ES3Settings_8cs" startline="162" endline="202">ES3Settings.FullPath</references>
        <references refid="classES3Settings_1a4d37bdd73f46cb53d997d8300c78451d" compoundref="ES3Settings_8cs" startline="94" endline="102">ES3Settings.location</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a3d4aa3ce200d5aa6a48744f4d86f9fb1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.DeleteDirectory</definition>
        <argsstring>(string directoryPath)</argsstring>
        <name>DeleteDirectory</name>
        <qualifiedname>ES3.DeleteDirectory</qualifiedname>
        <param>
          <type>string</type>
          <declname>directoryPath</declname>
        </param>
        <briefdescription>
<para>Deletes the directory at the given path using the settings provided. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>directoryPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the folder we wish to delete.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1232" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1232" bodyend="1235"/>
        <references refid="classES3_1a3d4aa3ce200d5aa6a48744f4d86f9fb1" compoundref="ES3_8cs" startline="1232" endline="1235">DeleteDirectory</references>
        <referencedby refid="classES3_1a3d4aa3ce200d5aa6a48744f4d86f9fb1" compoundref="ES3_8cs" startline="1232" endline="1235">DeleteDirectory</referencedby>
        <referencedby refid="classES3_1ad216239fdc0fba93d9b7ee4b71816b2f" compoundref="ES3_8cs" startline="1240" endline="1243">DeleteDirectory</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1ad216239fdc0fba93d9b7ee4b71816b2f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.DeleteDirectory</definition>
        <argsstring>(string directoryPath, ES3Settings settings)</argsstring>
        <name>DeleteDirectory</name>
        <qualifiedname>ES3.DeleteDirectory</qualifiedname>
        <param>
          <type>string</type>
          <declname>directoryPath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Deletes the directory at the given path using the settings provided. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>directoryPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the folder we wish to delete.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1240" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1240" bodyend="1243"/>
        <references refid="classES3_1a3d4aa3ce200d5aa6a48744f4d86f9fb1" compoundref="ES3_8cs" startline="1232" endline="1235">DeleteDirectory</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a198d5b8d91b69011dc587c3f9c87122b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.DeleteDirectory</definition>
        <argsstring>(ES3Settings settings)</argsstring>
        <name>DeleteDirectory</name>
        <qualifiedname>ES3.DeleteDirectory</qualifiedname>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Deletes the directory at the given path using the settings provided. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1247" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1247" bodyend="1255"/>
        <references refid="classES3Settings_1a3213eb287400d8d12776529fb9f70dd8" compoundref="ES3Settings_8cs" startline="162" endline="202">ES3Settings.FullPath</references>
        <references refid="classES3Settings_1a4d37bdd73f46cb53d997d8300c78451d" compoundref="ES3Settings_8cs" startline="94" endline="102">ES3Settings.location</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a0233b933fc8b2c7892ef4aca912c5bf4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.DeleteKey</definition>
        <argsstring>(string key)</argsstring>
        <name>DeleteKey</name>
        <qualifiedname>ES3.DeleteKey</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Deletes a key in the default file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key we want to delete.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1259" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1259" bodyend="1262"/>
        <references refid="classES3_1a0233b933fc8b2c7892ef4aca912c5bf4" compoundref="ES3_8cs" startline="1259" endline="1262">DeleteKey</references>
        <referencedby refid="classES3_1a0233b933fc8b2c7892ef4aca912c5bf4" compoundref="ES3_8cs" startline="1259" endline="1262">DeleteKey</referencedby>
        <referencedby refid="classES3_1a6e60a94cb73af2a1393a8bba148b9900" compoundref="ES3_8cs" startline="1273" endline="1276">DeleteKey</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1a1069b926ead44208e7a0390ea00be2cc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.DeleteKey</definition>
        <argsstring>(string key, string filePath)</argsstring>
        <name>DeleteKey</name>
        <qualifiedname>ES3.DeleteKey</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1264" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1264" bodyend="1267"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a6e60a94cb73af2a1393a8bba148b9900" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.DeleteKey</definition>
        <argsstring>(string key, string filePath, ES3Settings settings)</argsstring>
        <name>DeleteKey</name>
        <qualifiedname>ES3.DeleteKey</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Deletes a key in the file specified. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key we want to delete.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to delete the key from.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1273" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1273" bodyend="1276"/>
        <references refid="classES3_1a0233b933fc8b2c7892ef4aca912c5bf4" compoundref="ES3_8cs" startline="1259" endline="1262">DeleteKey</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a781732149c0277858b961a545f206ba7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.DeleteKey</definition>
        <argsstring>(string key, ES3Settings settings)</argsstring>
        <name>DeleteKey</name>
        <qualifiedname>ES3.DeleteKey</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Deletes a key in the file specified by the <ref refid="classES3Settings" kindref="compound">ES3Settings</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key we want to delete.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1281" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1281" bodyend="1295"/>
        <references refid="classES3Writer_1a8495b421b8cac2ede59e236066b2cea5" compoundref="ES3Writer_8cs" startline="413" endline="416">ES3Writer.Create</references>
        <references refid="classES3File_1a8d5731b0f43d409a43841ff8b4896b9b" compoundref="ES3File_8cs" startline="362" endline="366">ES3File.DeleteKey</references>
        <references refid="classES3_1a248c68f2b255ae21a240540630889142" compoundref="ES3_8cs" startline="1344" endline="1347">FileExists</references>
        <references refid="classES3Settings_1a4d37bdd73f46cb53d997d8300c78451d" compoundref="ES3Settings_8cs" startline="94" endline="102">ES3Settings.location</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a6375e28a1f61fb3f3484b68823ed3262" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ES3.KeyExists</definition>
        <argsstring>(string key)</argsstring>
        <name>KeyExists</name>
        <qualifiedname>ES3.KeyExists</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Checks whether a key exists in the default file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key we want to check the existence of.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the key exists, otherwise False.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1300" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1300" bodyend="1303"/>
        <references refid="classES3_1a6375e28a1f61fb3f3484b68823ed3262" compoundref="ES3_8cs" startline="1300" endline="1303">KeyExists</references>
        <referencedby refid="classES3_1a6375e28a1f61fb3f3484b68823ed3262" compoundref="ES3_8cs" startline="1300" endline="1303">KeyExists</referencedby>
        <referencedby refid="classES3_1ad25a691c8bacf39d440f20f0550cf619" compoundref="ES3_8cs" startline="1309" endline="1312">KeyExists</referencedby>
        <referencedby refid="classES3_1abe520d79328153a1a569a74e26df7314" compoundref="ES3_8cs" startline="1319" endline="1322">KeyExists</referencedby>
        <referencedby refid="classGameManager_1a229cccd2baab5ebf97e46ed2a92ff8d4" compoundref="GameManager_8cs" startline="656" endline="739">GameManager.LoadPlayerData</referencedby>
        <referencedby refid="classCrewFactory_1ac8ca1d814fa505854ab2871e0c2135fb" compoundref="CrewFactory_8cs" startline="260" endline="309">CrewFactory.RestoreCrewFromES3</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1ad25a691c8bacf39d440f20f0550cf619" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ES3.KeyExists</definition>
        <argsstring>(string key, string filePath)</argsstring>
        <name>KeyExists</name>
        <qualifiedname>ES3.KeyExists</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Checks whether a key exists in the specified file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key we want to check the existence of.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to search.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the key exists, otherwise False.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1309" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1309" bodyend="1312"/>
        <references refid="classES3_1a6375e28a1f61fb3f3484b68823ed3262" compoundref="ES3_8cs" startline="1300" endline="1303">KeyExists</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1abe520d79328153a1a569a74e26df7314" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ES3.KeyExists</definition>
        <argsstring>(string key, string filePath, ES3Settings settings)</argsstring>
        <name>KeyExists</name>
        <qualifiedname>ES3.KeyExists</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Checks whether a key exists in the default file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key we want to check the existence of.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to search.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the key exists, otherwise False.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1319" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1319" bodyend="1322"/>
        <references refid="classES3_1a6375e28a1f61fb3f3484b68823ed3262" compoundref="ES3_8cs" startline="1300" endline="1303">KeyExists</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a770b880c09645903cf787887ba59f7d1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ES3.KeyExists</definition>
        <argsstring>(string key, ES3Settings settings)</argsstring>
        <name>KeyExists</name>
        <qualifiedname>ES3.KeyExists</qualifiedname>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Checks whether a key exists in a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key we want to check the existence of.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the file exists, otherwise False.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1328" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1328" bodyend="1339"/>
        <references refid="classES3Reader_1aaaa29fbf59162a541245da765cefe48f" compoundref="ES3Reader_8cs" startline="337" endline="340">ES3Reader.Create</references>
        <references refid="classES3File_1aa6f9f7f546a97c63616adbf477464fe1" compoundref="ES3File_8cs" startline="371" endline="374">ES3File.KeyExists</references>
        <references refid="classES3Settings_1a4d37bdd73f46cb53d997d8300c78451d" compoundref="ES3Settings_8cs" startline="94" endline="102">ES3Settings.location</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a248c68f2b255ae21a240540630889142" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ES3.FileExists</definition>
        <argsstring>()</argsstring>
        <name>FileExists</name>
        <qualifiedname>ES3.FileExists</qualifiedname>
        <briefdescription>
<para>Checks whether the default file exists. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to check the existence of.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the file exists, otherwise False.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1344" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1344" bodyend="1347"/>
        <references refid="classES3_1a248c68f2b255ae21a240540630889142" compoundref="ES3_8cs" startline="1344" endline="1347">FileExists</references>
        <referencedby refid="classES3_1a781732149c0277858b961a545f206ba7" compoundref="ES3_8cs" startline="1281" endline="1295">DeleteKey</referencedby>
        <referencedby refid="classES3_1a248c68f2b255ae21a240540630889142" compoundref="ES3_8cs" startline="1344" endline="1347">FileExists</referencedby>
        <referencedby refid="classES3_1a0f131e83e01f8d15f74c22c40df74202" compoundref="ES3_8cs" startline="1352" endline="1355">FileExists</referencedby>
        <referencedby refid="classES3_1a84e229a88db9aca360e0ba2076cae1fe" compoundref="ES3_8cs" startline="1361" endline="1364">FileExists</referencedby>
        <referencedby refid="classGameManager_1a229cccd2baab5ebf97e46ed2a92ff8d4" compoundref="GameManager_8cs" startline="656" endline="739">GameManager.LoadPlayerData</referencedby>
        <referencedby refid="classES3_1a05d1e47a259d390de967cd0c9bb3374c" compoundref="ES3_8cs" startline="1585" endline="1595">RestoreBackup</referencedby>
        <referencedby refid="classCrewFactory_1ac8ca1d814fa505854ab2871e0c2135fb" compoundref="CrewFactory_8cs" startline="260" endline="309">CrewFactory.RestoreCrewFromES3</referencedby>
        <referencedby refid="classES3Cloud_1a360045cc94dce619e926fee9fd7a78f5" compoundref="ES3Cloud_8cs" startline="149" endline="166">ES3Cloud.Sync</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1a0f131e83e01f8d15f74c22c40df74202" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ES3.FileExists</definition>
        <argsstring>(string filePath)</argsstring>
        <name>FileExists</name>
        <qualifiedname>ES3.FileExists</qualifiedname>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Checks whether a file exists. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to check the existence of.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the file exists, otherwise False.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1352" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1352" bodyend="1355"/>
        <references refid="classES3_1a248c68f2b255ae21a240540630889142" compoundref="ES3_8cs" startline="1344" endline="1347">FileExists</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a84e229a88db9aca360e0ba2076cae1fe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ES3.FileExists</definition>
        <argsstring>(string filePath, ES3Settings settings)</argsstring>
        <name>FileExists</name>
        <qualifiedname>ES3.FileExists</qualifiedname>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Checks whether a file exists. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to check the existence of.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the file exists, otherwise False.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1361" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1361" bodyend="1364"/>
        <references refid="classES3_1a248c68f2b255ae21a240540630889142" compoundref="ES3_8cs" startline="1344" endline="1347">FileExists</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a16e3194ce764f22a59a314e606e9cd15" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ES3.FileExists</definition>
        <argsstring>(ES3Settings settings)</argsstring>
        <name>FileExists</name>
        <qualifiedname>ES3.FileExists</qualifiedname>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Checks whether a file exists. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the file exists, otherwise False.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1369" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1369" bodyend="1380"/>
        <references refid="classES3Settings_1a3213eb287400d8d12776529fb9f70dd8" compoundref="ES3Settings_8cs" startline="162" endline="202">ES3Settings.FullPath</references>
        <references refid="classES3Settings_1a4d37bdd73f46cb53d997d8300c78451d" compoundref="ES3Settings_8cs" startline="94" endline="102">ES3Settings.location</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a2a44b91e3315e24c98665de92d3f03da" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ES3.DirectoryExists</definition>
        <argsstring>(string folderPath)</argsstring>
        <name>DirectoryExists</name>
        <qualifiedname>ES3.DirectoryExists</qualifiedname>
        <param>
          <type>string</type>
          <declname>folderPath</declname>
        </param>
        <briefdescription>
<para>Checks whether a folder exists. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>folderPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the folder we want to check the existence of.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the folder exists, otherwise False.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1385" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1385" bodyend="1388"/>
        <references refid="classES3_1a2a44b91e3315e24c98665de92d3f03da" compoundref="ES3_8cs" startline="1385" endline="1388">DirectoryExists</references>
        <referencedby refid="classES3_1ae2128be509250e2000b9df2339dbd123" compoundref="ES3_8cs" startline="1173" endline="1191">CopyDirectory</referencedby>
        <referencedby refid="classES3_1a2a44b91e3315e24c98665de92d3f03da" compoundref="ES3_8cs" startline="1385" endline="1388">DirectoryExists</referencedby>
        <referencedby refid="classES3_1a83a8febb18104d0a5a448bbd0c21ec5c" compoundref="ES3_8cs" startline="1395" endline="1398">DirectoryExists</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1a83a8febb18104d0a5a448bbd0c21ec5c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ES3.DirectoryExists</definition>
        <argsstring>(string folderPath, ES3Settings settings)</argsstring>
        <name>DirectoryExists</name>
        <qualifiedname>ES3.DirectoryExists</qualifiedname>
        <param>
          <type>string</type>
          <declname>folderPath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Checks whether a file exists. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>folderPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the folder we want to check the existence of.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the folder exists, otherwise False.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1395" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1395" bodyend="1398"/>
        <references refid="classES3_1a2a44b91e3315e24c98665de92d3f03da" compoundref="ES3_8cs" startline="1385" endline="1388">DirectoryExists</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a92bb228b17f4c32439f3abf01056851b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ES3.DirectoryExists</definition>
        <argsstring>(ES3Settings settings)</argsstring>
        <name>DirectoryExists</name>
        <qualifiedname>ES3.DirectoryExists</qualifiedname>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Checks whether a folder exists. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the folder exists, otherwise False.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1403" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1403" bodyend="1412"/>
        <references refid="classES3Settings_1a3213eb287400d8d12776529fb9f70dd8" compoundref="ES3Settings_8cs" startline="162" endline="202">ES3Settings.FullPath</references>
        <references refid="classES3Settings_1a4d37bdd73f46cb53d997d8300c78451d" compoundref="ES3Settings_8cs" startline="94" endline="102">ES3Settings.location</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a691ca13d1a7ca987187710d3d3c616b2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string[]</type>
        <definition>static string[] ES3.GetKeys</definition>
        <argsstring>()</argsstring>
        <name>GetKeys</name>
        <qualifiedname>ES3.GetKeys</qualifiedname>
        <briefdescription>
<para>Gets an array of all of the key names in the default file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1415" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1415" bodyend="1418"/>
        <references refid="classES3_1a691ca13d1a7ca987187710d3d3c616b2" compoundref="ES3_8cs" startline="1415" endline="1418">GetKeys</references>
        <referencedby refid="classES3_1a691ca13d1a7ca987187710d3d3c616b2" compoundref="ES3_8cs" startline="1415" endline="1418">GetKeys</referencedby>
        <referencedby refid="classES3_1ab10fa3ead9d55468b82314f84069ce35" compoundref="ES3_8cs" startline="1422" endline="1425">GetKeys</referencedby>
        <referencedby refid="classES3_1a5b9daf3f38281180f2a8a430e1be60e9" compoundref="ES3_8cs" startline="1430" endline="1433">GetKeys</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1ab10fa3ead9d55468b82314f84069ce35" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string[]</type>
        <definition>static string[] ES3.GetKeys</definition>
        <argsstring>(string filePath)</argsstring>
        <name>GetKeys</name>
        <qualifiedname>ES3.GetKeys</qualifiedname>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Gets an array of all of the key names in a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to get the key names from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1422" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1422" bodyend="1425"/>
        <references refid="classES3_1a691ca13d1a7ca987187710d3d3c616b2" compoundref="ES3_8cs" startline="1415" endline="1418">GetKeys</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a5b9daf3f38281180f2a8a430e1be60e9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string[]</type>
        <definition>static string[] ES3.GetKeys</definition>
        <argsstring>(string filePath, ES3Settings settings)</argsstring>
        <name>GetKeys</name>
        <qualifiedname>ES3.GetKeys</qualifiedname>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Gets an array of all of the key names in a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we want to get the key names from.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1430" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1430" bodyend="1433"/>
        <references refid="classES3_1a691ca13d1a7ca987187710d3d3c616b2" compoundref="ES3_8cs" startline="1415" endline="1418">GetKeys</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a5eaa2a6725e6a0b7bd96c35ac6fc16c9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string[]</type>
        <definition>static string[] ES3.GetKeys</definition>
        <argsstring>(ES3Settings settings)</argsstring>
        <name>GetKeys</name>
        <qualifiedname>ES3.GetKeys</qualifiedname>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Gets an array of all of the key names in a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1437" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1437" bodyend="1456"/>
        <references refid="classES3Reader_1aaaa29fbf59162a541245da765cefe48f" compoundref="ES3Reader_8cs" startline="337" endline="340">ES3Reader.Create</references>
        <references refid="classES3Settings_1a3213eb287400d8d12776529fb9f70dd8" compoundref="ES3Settings_8cs" startline="162" endline="202">ES3Settings.FullPath</references>
        <references refid="classES3File_1aca0bf566482af810d3cb9760656fc4b1" compoundref="ES3File_8cs" startline="150" endline="156">ES3File.GetKeys</references>
        <references refid="classES3Settings_1a4d37bdd73f46cb53d997d8300c78451d" compoundref="ES3Settings_8cs" startline="94" endline="102">ES3Settings.location</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a6501d17e4b57287c7f81645168540dfa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string[]</type>
        <definition>static string[] ES3.GetFiles</definition>
        <argsstring>()</argsstring>
        <name>GetFiles</name>
        <qualifiedname>ES3.GetFiles</qualifiedname>
        <briefdescription>
<para>Gets an array of all of the file names in a directory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1459" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1459" bodyend="1470"/>
        <references refid="classES3_1a6501d17e4b57287c7f81645168540dfa" compoundref="ES3_8cs" startline="1459" endline="1470">GetFiles</references>
        <referencedby refid="classES3_1ae2128be509250e2000b9df2339dbd123" compoundref="ES3_8cs" startline="1173" endline="1191">CopyDirectory</referencedby>
        <referencedby refid="classES3_1a6501d17e4b57287c7f81645168540dfa" compoundref="ES3_8cs" startline="1459" endline="1470">GetFiles</referencedby>
        <referencedby refid="classES3_1ae4af20ce4e506177cc4f6c334c0381fd" compoundref="ES3_8cs" startline="1474" endline="1477">GetFiles</referencedby>
        <referencedby refid="classES3_1a426e42ee64b8dde2bac3801a4d76e490" compoundref="ES3_8cs" startline="1482" endline="1485">GetFiles</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1ae4af20ce4e506177cc4f6c334c0381fd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string[]</type>
        <definition>static string[] ES3.GetFiles</definition>
        <argsstring>(string directoryPath)</argsstring>
        <name>GetFiles</name>
        <qualifiedname>ES3.GetFiles</qualifiedname>
        <param>
          <type>string</type>
          <declname>directoryPath</declname>
        </param>
        <briefdescription>
<para>Gets an array of all of the file names in a directory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>directoryPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the directory we want to get the file names from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1474" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1474" bodyend="1477"/>
        <references refid="classES3_1a6501d17e4b57287c7f81645168540dfa" compoundref="ES3_8cs" startline="1459" endline="1470">GetFiles</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a426e42ee64b8dde2bac3801a4d76e490" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string[]</type>
        <definition>static string[] ES3.GetFiles</definition>
        <argsstring>(string directoryPath, ES3Settings settings)</argsstring>
        <name>GetFiles</name>
        <qualifiedname>ES3.GetFiles</qualifiedname>
        <param>
          <type>string</type>
          <declname>directoryPath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Gets an array of all of the file names in a directory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>directoryPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the directory we want to get the file names from.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1482" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1482" bodyend="1485"/>
        <references refid="classES3_1a6501d17e4b57287c7f81645168540dfa" compoundref="ES3_8cs" startline="1459" endline="1470">GetFiles</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1add732c9e2fadeed88c8c70147f0ac1a0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string[]</type>
        <definition>static string[] ES3.GetFiles</definition>
        <argsstring>(ES3Settings settings)</argsstring>
        <name>GetFiles</name>
        <qualifiedname>ES3.GetFiles</qualifiedname>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Gets an array of all of the file names in a directory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1489" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1489" bodyend="1496"/>
        <references refid="classES3Settings_1a3213eb287400d8d12776529fb9f70dd8" compoundref="ES3Settings_8cs" startline="162" endline="202">ES3Settings.FullPath</references>
        <references refid="classES3Settings_1a4d37bdd73f46cb53d997d8300c78451d" compoundref="ES3Settings_8cs" startline="94" endline="102">ES3Settings.location</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a543ec50b060c1454e530c49ff5b30c09" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string[]</type>
        <definition>static string[] ES3.GetDirectories</definition>
        <argsstring>()</argsstring>
        <name>GetDirectories</name>
        <qualifiedname>ES3.GetDirectories</qualifiedname>
        <briefdescription>
<para>Gets an array of all of the sub-directory names in a directory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1499" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1499" bodyend="1502"/>
        <references refid="classES3_1a543ec50b060c1454e530c49ff5b30c09" compoundref="ES3_8cs" startline="1499" endline="1502">GetDirectories</references>
        <referencedby refid="classES3_1ae2128be509250e2000b9df2339dbd123" compoundref="ES3_8cs" startline="1173" endline="1191">CopyDirectory</referencedby>
        <referencedby refid="classES3_1a543ec50b060c1454e530c49ff5b30c09" compoundref="ES3_8cs" startline="1499" endline="1502">GetDirectories</referencedby>
        <referencedby refid="classES3_1a4da2942523313a413133d67aaf2e88be" compoundref="ES3_8cs" startline="1506" endline="1509">GetDirectories</referencedby>
        <referencedby refid="classES3_1adf7b81ae7fee3eac01aea1ccbd97e4e1" compoundref="ES3_8cs" startline="1514" endline="1517">GetDirectories</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1a4da2942523313a413133d67aaf2e88be" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string[]</type>
        <definition>static string[] ES3.GetDirectories</definition>
        <argsstring>(string directoryPath)</argsstring>
        <name>GetDirectories</name>
        <qualifiedname>ES3.GetDirectories</qualifiedname>
        <param>
          <type>string</type>
          <declname>directoryPath</declname>
        </param>
        <briefdescription>
<para>Gets an array of all of the sub-directory names in a directory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>directoryPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the directory we want to get the sub-directory names from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1506" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1506" bodyend="1509"/>
        <references refid="classES3_1a543ec50b060c1454e530c49ff5b30c09" compoundref="ES3_8cs" startline="1499" endline="1502">GetDirectories</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1adf7b81ae7fee3eac01aea1ccbd97e4e1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string[]</type>
        <definition>static string[] ES3.GetDirectories</definition>
        <argsstring>(string directoryPath, ES3Settings settings)</argsstring>
        <name>GetDirectories</name>
        <qualifiedname>ES3.GetDirectories</qualifiedname>
        <param>
          <type>string</type>
          <declname>directoryPath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Gets an array of all of the sub-directory names in a directory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>directoryPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the directory we want to get the sub-directory names from.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1514" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1514" bodyend="1517"/>
        <references refid="classES3_1a543ec50b060c1454e530c49ff5b30c09" compoundref="ES3_8cs" startline="1499" endline="1502">GetDirectories</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a26b1b7b528ae254235c8ddc23070a57e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string[]</type>
        <definition>static string[] ES3.GetDirectories</definition>
        <argsstring>(ES3Settings settings)</argsstring>
        <name>GetDirectories</name>
        <qualifiedname>ES3.GetDirectories</qualifiedname>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Gets an array of all of the sub-directory names in a directory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1521" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1521" bodyend="1526"/>
        <references refid="classES3Settings_1a3213eb287400d8d12776529fb9f70dd8" compoundref="ES3Settings_8cs" startline="162" endline="202">ES3Settings.FullPath</references>
        <references refid="classES3Settings_1a4d37bdd73f46cb53d997d8300c78451d" compoundref="ES3Settings_8cs" startline="94" endline="102">ES3Settings.location</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1abd1026a340f1c0740b8f373928d41992" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.CreateBackup</definition>
        <argsstring>()</argsstring>
        <name>CreateBackup</name>
        <qualifiedname>ES3.CreateBackup</qualifiedname>
        <briefdescription>
<para>Creates a backup of the default file . </para>
        </briefdescription>
        <detaileddescription>
<para>A backup is created by copying the file and giving it a .bak extension. If a backup already exists it will be overwritten, so you will need to ensure that the old backup will not be required before calling this method.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1531" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1531" bodyend="1534"/>
        <references refid="classES3_1abd1026a340f1c0740b8f373928d41992" compoundref="ES3_8cs" startline="1531" endline="1534">CreateBackup</references>
        <referencedby refid="classES3_1abd1026a340f1c0740b8f373928d41992" compoundref="ES3_8cs" startline="1531" endline="1534">CreateBackup</referencedby>
        <referencedby refid="classES3_1aa090d582ac0334f900fd6d579eac26fd" compoundref="ES3_8cs" startline="1540" endline="1543">CreateBackup</referencedby>
        <referencedby refid="classES3_1ac99b6b4a07b03014f089086cc30804ff" compoundref="ES3_8cs" startline="1550" endline="1553">CreateBackup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1aa090d582ac0334f900fd6d579eac26fd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.CreateBackup</definition>
        <argsstring>(string filePath)</argsstring>
        <name>CreateBackup</name>
        <qualifiedname>ES3.CreateBackup</qualifiedname>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Creates a backup of a file. </para>
        </briefdescription>
        <detaileddescription>
<para>A backup is created by copying the file and giving it a .bak extension. If a backup already exists it will be overwritten, so you will need to ensure that the old backup will not be required before calling this method.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we wish to create a backup of.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1540" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1540" bodyend="1543"/>
        <references refid="classES3_1abd1026a340f1c0740b8f373928d41992" compoundref="ES3_8cs" startline="1531" endline="1534">CreateBackup</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1ac99b6b4a07b03014f089086cc30804ff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.CreateBackup</definition>
        <argsstring>(string filePath, ES3Settings settings)</argsstring>
        <name>CreateBackup</name>
        <qualifiedname>ES3.CreateBackup</qualifiedname>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Creates a backup of a file. </para>
        </briefdescription>
        <detaileddescription>
<para>A backup is created by copying the file and giving it a .bak extension. If a backup already exists it will be overwritten, so you will need to ensure that the old backup will not be required before calling this method.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we wish to create a backup of.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1550" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1550" bodyend="1553"/>
        <references refid="classES3_1abd1026a340f1c0740b8f373928d41992" compoundref="ES3_8cs" startline="1531" endline="1534">CreateBackup</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a35dda269ec93dec2fe7d33ba03d9e9bc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.CreateBackup</definition>
        <argsstring>(ES3Settings settings)</argsstring>
        <name>CreateBackup</name>
        <qualifiedname>ES3.CreateBackup</qualifiedname>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Creates a backup of a file. </para>
        </briefdescription>
        <detaileddescription>
<para>A backup is created by copying the file and giving it a .bak extension. If a backup already exists it will be overwritten, so you will need to ensure that the old backup will not be required before calling this method.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1559" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1559" bodyend="1563"/>
        <references refid="classES3_1a199dddfd7792430abc4cdec0d3b13e5c" compoundref="ES3_8cs" startline="1055" endline="1058">CopyFile</references>
        <references refid="classES3Settings_1aec222d18f62c320ffbc1648c05514731" compoundref="ES3Settings_8cs" startline="105">ES3Settings.path</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a3d6a37d45b1eb84b54a4aa3b41a72325" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ES3.RestoreBackup</definition>
        <argsstring>(string filePath)</argsstring>
        <name>RestoreBackup</name>
        <qualifiedname>ES3.RestoreBackup</qualifiedname>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Restores a backup of a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we wish to restore the backup of.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if a backup was restored, or False if no backup could be found.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1568" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1568" bodyend="1571"/>
        <references refid="classES3_1a3d6a37d45b1eb84b54a4aa3b41a72325" compoundref="ES3_8cs" startline="1568" endline="1571">RestoreBackup</references>
        <referencedby refid="classES3_1a3d6a37d45b1eb84b54a4aa3b41a72325" compoundref="ES3_8cs" startline="1568" endline="1571">RestoreBackup</referencedby>
        <referencedby refid="classES3_1a5269ac9e9108e05fa9bb65186ac52bcc" compoundref="ES3_8cs" startline="1577" endline="1580">RestoreBackup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1a5269ac9e9108e05fa9bb65186ac52bcc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ES3.RestoreBackup</definition>
        <argsstring>(string filePath, ES3Settings settings)</argsstring>
        <name>RestoreBackup</name>
        <qualifiedname>ES3.RestoreBackup</qualifiedname>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Restores a backup of a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative or absolute path of the file we wish to restore the backup of.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if a backup was restored, or False if no backup could be found.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1577" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1577" bodyend="1580"/>
        <references refid="classES3_1a3d6a37d45b1eb84b54a4aa3b41a72325" compoundref="ES3_8cs" startline="1568" endline="1571">RestoreBackup</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a05d1e47a259d390de967cd0c9bb3374c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ES3.RestoreBackup</definition>
        <argsstring>(ES3Settings settings)</argsstring>
        <name>RestoreBackup</name>
        <qualifiedname>ES3.RestoreBackup</qualifiedname>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Restores a backup of a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if a backup was restored, or False if no backup could be found.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1585" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1585" bodyend="1595"/>
        <references refid="classES3_1a248c68f2b255ae21a240540630889142" compoundref="ES3_8cs" startline="1344" endline="1347">FileExists</references>
        <references refid="classES3Settings_1aec222d18f62c320ffbc1648c05514731" compoundref="ES3Settings_8cs" startline="105">ES3Settings.path</references>
        <references refid="classES3_1a978f401aa26462fd78ebdb7888584789" compoundref="ES3_8cs" startline="1107" endline="1110">RenameFile</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1ae5a6f9c1e4669c4df16af944e719bfbc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DateTime</type>
        <definition>static DateTime ES3.GetTimestamp</definition>
        <argsstring>()</argsstring>
        <name>GetTimestamp</name>
        <qualifiedname>ES3.GetTimestamp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1597" column="28" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1597" bodyend="1600"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1af318a025820976eda8dd794c0be53b48" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DateTime</type>
        <definition>static DateTime ES3.GetTimestamp</definition>
        <argsstring>(string filePath)</argsstring>
        <name>GetTimestamp</name>
        <qualifiedname>ES3.GetTimestamp</qualifiedname>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1602" column="28" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1602" bodyend="1605"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a2d073f237aa6c1f1c22c2f68d53d16b2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DateTime</type>
        <definition>static DateTime ES3.GetTimestamp</definition>
        <argsstring>(string filePath, ES3Settings settings)</argsstring>
        <name>GetTimestamp</name>
        <qualifiedname>ES3.GetTimestamp</qualifiedname>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1607" column="28" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1607" bodyend="1610"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1aadaa9fbe1f6c05e670f7f3c59b160546" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DateTime</type>
        <definition>static DateTime ES3.GetTimestamp</definition>
        <argsstring>(ES3Settings settings)</argsstring>
        <name>GetTimestamp</name>
        <qualifiedname>ES3.GetTimestamp</qualifiedname>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Gets the date and time the file was last updated, in the UTC timezone. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings we want to use to override the default settings.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A DateTime object represeting the UTC date and time the file was last updated.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1615" column="28" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1615" bodyend="1625"/>
        <references refid="classES3Settings_1a3213eb287400d8d12776529fb9f70dd8" compoundref="ES3Settings_8cs" startline="162" endline="202">ES3Settings.FullPath</references>
        <references refid="classES3Settings_1a4d37bdd73f46cb53d997d8300c78451d" compoundref="ES3Settings_8cs" startline="94" endline="102">ES3Settings.location</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1af49b451837178d9ff0086e6d84cc7884" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.StoreCachedFile</definition>
        <argsstring>()</argsstring>
        <name>StoreCachedFile</name>
        <qualifiedname>ES3.StoreCachedFile</qualifiedname>
        <briefdescription>
<para>Stores the default cached file to persistent storage. </para>
        </briefdescription>
        <detaileddescription>
<para>A backup is created by copying the file and giving it a .bak extension. If a backup already exists it will be overwritten, so you will need to ensure that the old backup will not be required before calling this method.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1630" column="20" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1630" bodyend="1633"/>
        <referencedby refid="classES3_1ad9ad8b24ede06ac4bc131b81c3d5bbd6" compoundref="ES3_8cs" startline="1637" endline="1640">StoreCachedFile</referencedby>
        <referencedby refid="classES3_1a557d9f90d2cda899b352e5309db6c60f" compoundref="ES3_8cs" startline="1645" endline="1648">StoreCachedFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1ad9ad8b24ede06ac4bc131b81c3d5bbd6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.StoreCachedFile</definition>
        <argsstring>(string filePath)</argsstring>
        <name>StoreCachedFile</name>
        <qualifiedname>ES3.StoreCachedFile</qualifiedname>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Stores a cached file to persistent storage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename or path of the file we want to store the cached file to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1637" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1637" bodyend="1640"/>
        <references refid="classES3_1af49b451837178d9ff0086e6d84cc7884" compoundref="ES3_8cs" startline="1630" endline="1633">StoreCachedFile</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a557d9f90d2cda899b352e5309db6c60f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.StoreCachedFile</definition>
        <argsstring>(string filePath, ES3Settings settings)</argsstring>
        <name>StoreCachedFile</name>
        <qualifiedname>ES3.StoreCachedFile</qualifiedname>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Creates a backup of a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename or path of the file we want to store the cached file to.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings of the file we want to store to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1645" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1645" bodyend="1648"/>
        <references refid="classES3_1af49b451837178d9ff0086e6d84cc7884" compoundref="ES3_8cs" startline="1630" endline="1633">StoreCachedFile</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1aeb30cc4c0196887d11fce5ca6b7afcf4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.StoreCachedFile</definition>
        <argsstring>(ES3Settings settings)</argsstring>
        <name>StoreCachedFile</name>
        <qualifiedname>ES3.StoreCachedFile</qualifiedname>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Stores a cached file to persistent storage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings of the file we want to store to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1652" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1652" bodyend="1655"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a77e1781d98562d55738306788dc81732" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.CacheFile</definition>
        <argsstring>()</argsstring>
        <name>CacheFile</name>
        <qualifiedname>ES3.CacheFile</qualifiedname>
        <briefdescription>
<para>Loads the default file in persistent storage into the cache. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1658" column="20" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1658" bodyend="1661"/>
        <references refid="classES3_1a77e1781d98562d55738306788dc81732" compoundref="ES3_8cs" startline="1658" endline="1661">CacheFile</references>
        <referencedby refid="classES3_1a77e1781d98562d55738306788dc81732" compoundref="ES3_8cs" startline="1658" endline="1661">CacheFile</referencedby>
        <referencedby refid="classES3_1a056553670cd1011a3db25d7b4a885626" compoundref="ES3_8cs" startline="1665" endline="1668">CacheFile</referencedby>
        <referencedby refid="classES3_1af6d8e47a482cd7650a0783a9bf142a43" compoundref="ES3_8cs" startline="1673" endline="1676">CacheFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classES3_1a056553670cd1011a3db25d7b4a885626" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.CacheFile</definition>
        <argsstring>(string filePath)</argsstring>
        <name>CacheFile</name>
        <qualifiedname>ES3.CacheFile</qualifiedname>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Loads a file from persistent storage into the cache. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename or path of the file we want to store the cached file to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1665" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1665" bodyend="1668"/>
        <references refid="classES3_1a77e1781d98562d55738306788dc81732" compoundref="ES3_8cs" startline="1658" endline="1661">CacheFile</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1af6d8e47a482cd7650a0783a9bf142a43" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.CacheFile</definition>
        <argsstring>(string filePath, ES3Settings settings)</argsstring>
        <name>CacheFile</name>
        <qualifiedname>ES3.CacheFile</qualifiedname>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Loads a file from persistent storage into the cache. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename or path of the file we want to store the cached file to.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings of the file we want to cache.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1673" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1673" bodyend="1676"/>
        <references refid="classES3_1a77e1781d98562d55738306788dc81732" compoundref="ES3_8cs" startline="1658" endline="1661">CacheFile</references>
      </memberdef>
      <memberdef kind="function" id="classES3_1a69d1a13277fd0a679c4b4ba0b79f2cf2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.CacheFile</definition>
        <argsstring>(ES3Settings settings)</argsstring>
        <name>CacheFile</name>
        <qualifiedname>ES3.CacheFile</qualifiedname>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Loads a file from persistent storage into the cache. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>settings</parametername>
</parameternamelist>
<parameterdescription>
<para>The settings of the file we want to cache.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1680" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1680" bodyend="1683"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a3e93b58ba7eb63bcd4ddd4471f577b37" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ES3.Init</definition>
        <argsstring>()</argsstring>
        <name>Init</name>
        <qualifiedname>ES3.Init</qualifiedname>
        <briefdescription>
<para>Initialises Easy Save. This happens automatically when any <ref refid="classES3" kindref="compound">ES3</ref> methods are called, but is useful if you want to perform initialisation before calling an <ref refid="classES3" kindref="compound">ES3</ref> method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="1686" column="24" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="1686" bodyend="1691"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="package-static-func">
      <memberdef kind="function" id="classES3_1aef2e80a3b0fe4b12c2915125dd2269aa" prot="package" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte[]</type>
        <definition>static byte[] ES3.Serialize</definition>
        <argsstring>(object value, ES3Types.ES3Type type, ES3Settings settings=null)</argsstring>
        <name>Serialize</name>
        <qualifiedname>ES3.Serialize</qualifiedname>
        <param>
          <type>object</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classES3Types_1_1ES3Type" kindref="compound">ES3Types.ES3Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="890" column="26" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="890" bodyend="908"/>
      </memberdef>
      <memberdef kind="function" id="classES3_1a0e97eba8552ac1f26ea02ea84d2b67c6" prot="package" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>object</type>
        <definition>static object ES3.Deserialize</definition>
        <argsstring>(ES3Types.ES3Type type, byte[] bytes, ES3Settings settings=null)</argsstring>
        <name>Deserialize</name>
        <qualifiedname>ES3.Deserialize</qualifiedname>
        <param>
          <type><ref refid="classES3Types_1_1ES3Type" kindref="compound">ES3Types.ES3Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>byte[]</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type><ref refid="classES3Settings" kindref="compound">ES3Settings</ref></type>
          <declname>settings</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="915" column="28" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="915" bodyend="924"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>The main class for Easy Save methods. All methods in this class are static. </para>
    </briefdescription>
    <detaileddescription>
<para><linebreak/>
 </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>ES3</label>
        <link refid="classES3"/>
      </node>
    </collaborationgraph>
    <location file="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" line="18" column="7" bodyfile="Assets/Plugins/Easy Save 3/Scripts/ES3.cs" bodystart="19" bodyend="1694"/>
    <listofallmembers>
      <member refid="classES3_1aa601e9b56a7ee4d67bcb75028c53a74b" prot="public" virt="non-virtual"><scope>ES3</scope><name>AppendRaw</name></member>
      <member refid="classES3_1a0bd897e47e6ebe82400b0be60a223049" prot="public" virt="non-virtual"><scope>ES3</scope><name>AppendRaw</name></member>
      <member refid="classES3_1a48ac006692fe6086bed2ab7089e9196e" prot="public" virt="non-virtual"><scope>ES3</scope><name>AppendRaw</name></member>
      <member refid="classES3_1a8e5091cee8eeaf9c76a5d24e35f5c71f" prot="public" virt="non-virtual"><scope>ES3</scope><name>AppendRaw</name></member>
      <member refid="classES3_1ae87992f4fe10e8d03c9b2a19729eb01a" prot="public" virt="non-virtual"><scope>ES3</scope><name>AppendRaw</name></member>
      <member refid="classES3_1a39ae53f362f4db72c10e7fd6182db0c5" prot="public" virt="non-virtual"><scope>ES3</scope><name>AppendRaw</name></member>
      <member refid="classES3_1a52f7ef2d18ceafa678633143832638a9" prot="public" virt="non-virtual"><scope>ES3</scope><name>AppendRaw</name></member>
      <member refid="classES3_1a77e1781d98562d55738306788dc81732" prot="public" virt="non-virtual"><scope>ES3</scope><name>CacheFile</name></member>
      <member refid="classES3_1a056553670cd1011a3db25d7b4a885626" prot="public" virt="non-virtual"><scope>ES3</scope><name>CacheFile</name></member>
      <member refid="classES3_1af6d8e47a482cd7650a0783a9bf142a43" prot="public" virt="non-virtual"><scope>ES3</scope><name>CacheFile</name></member>
      <member refid="classES3_1a69d1a13277fd0a679c4b4ba0b79f2cf2" prot="public" virt="non-virtual"><scope>ES3</scope><name>CacheFile</name></member>
      <member refid="classES3_1a7d3d31d6de4a05417020da84254f52ba" prot="public" virt="non-virtual"><scope>ES3</scope><name>CompressBytes</name></member>
      <member refid="classES3_1aaec9bdaa1bf5695b4dd3cca92a7aea6a" prot="public" virt="non-virtual"><scope>ES3</scope><name>CompressionType</name></member>
      <member refid="classES3_1a046afdffb43011ab67665d4c160b5564" prot="public" virt="non-virtual"><scope>ES3</scope><name>CompressString</name></member>
      <member refid="classES3_1af95f61bc3b7e9f40308c0738d019d5d5" prot="public" virt="non-virtual"><scope>ES3</scope><name>CopyDirectory</name></member>
      <member refid="classES3_1a448e7af968682b74282054f45a80890a" prot="public" virt="non-virtual"><scope>ES3</scope><name>CopyDirectory</name></member>
      <member refid="classES3_1ae2128be509250e2000b9df2339dbd123" prot="public" virt="non-virtual"><scope>ES3</scope><name>CopyDirectory</name></member>
      <member refid="classES3_1a199dddfd7792430abc4cdec0d3b13e5c" prot="public" virt="non-virtual"><scope>ES3</scope><name>CopyFile</name></member>
      <member refid="classES3_1acd9086d2026ee6c99fbf9f7286b4b8a4" prot="public" virt="non-virtual"><scope>ES3</scope><name>CopyFile</name></member>
      <member refid="classES3_1abb9f5fac7b11ba87db1d7cfb7f9c447a" prot="public" virt="non-virtual"><scope>ES3</scope><name>CopyFile</name></member>
      <member refid="classES3_1abd1026a340f1c0740b8f373928d41992" prot="public" virt="non-virtual"><scope>ES3</scope><name>CreateBackup</name></member>
      <member refid="classES3_1aa090d582ac0334f900fd6d579eac26fd" prot="public" virt="non-virtual"><scope>ES3</scope><name>CreateBackup</name></member>
      <member refid="classES3_1ac99b6b4a07b03014f089086cc30804ff" prot="public" virt="non-virtual"><scope>ES3</scope><name>CreateBackup</name></member>
      <member refid="classES3_1a35dda269ec93dec2fe7d33ba03d9e9bc" prot="public" virt="non-virtual"><scope>ES3</scope><name>CreateBackup</name></member>
      <member refid="classES3_1a5971f92f0207c171bba498f7df84318f" prot="public" virt="non-virtual"><scope>ES3</scope><name>DecompressBytes</name></member>
      <member refid="classES3_1a2bc12a0678764d9914fb0361c6dacf96" prot="public" virt="non-virtual"><scope>ES3</scope><name>DecompressString</name></member>
      <member refid="classES3_1a9913fa21590da2d606586e21a2a678d2" prot="public" virt="non-virtual"><scope>ES3</scope><name>DecryptBytes</name></member>
      <member refid="classES3_1a6323e1bd166b80160624414e4bda9751" prot="public" virt="non-virtual"><scope>ES3</scope><name>DecryptString</name></member>
      <member refid="classES3_1a3d4aa3ce200d5aa6a48744f4d86f9fb1" prot="public" virt="non-virtual"><scope>ES3</scope><name>DeleteDirectory</name></member>
      <member refid="classES3_1ad216239fdc0fba93d9b7ee4b71816b2f" prot="public" virt="non-virtual"><scope>ES3</scope><name>DeleteDirectory</name></member>
      <member refid="classES3_1a198d5b8d91b69011dc587c3f9c87122b" prot="public" virt="non-virtual"><scope>ES3</scope><name>DeleteDirectory</name></member>
      <member refid="classES3_1a250f0401b672b19068817a0eb48efb41" prot="public" virt="non-virtual"><scope>ES3</scope><name>DeleteFile</name></member>
      <member refid="classES3_1a6712b1bdad7570f251077a00093a762a" prot="public" virt="non-virtual"><scope>ES3</scope><name>DeleteFile</name></member>
      <member refid="classES3_1a88497c47446f3bad5d9a184dad206f75" prot="public" virt="non-virtual"><scope>ES3</scope><name>DeleteFile</name></member>
      <member refid="classES3_1a30f00504a6c1c01419619b9c57ad4d71" prot="public" virt="non-virtual"><scope>ES3</scope><name>DeleteFile</name></member>
      <member refid="classES3_1a0233b933fc8b2c7892ef4aca912c5bf4" prot="public" virt="non-virtual"><scope>ES3</scope><name>DeleteKey</name></member>
      <member refid="classES3_1a1069b926ead44208e7a0390ea00be2cc" prot="public" virt="non-virtual"><scope>ES3</scope><name>DeleteKey</name></member>
      <member refid="classES3_1a6e60a94cb73af2a1393a8bba148b9900" prot="public" virt="non-virtual"><scope>ES3</scope><name>DeleteKey</name></member>
      <member refid="classES3_1a781732149c0277858b961a545f206ba7" prot="public" virt="non-virtual"><scope>ES3</scope><name>DeleteKey</name></member>
      <member refid="classES3_1a0e97eba8552ac1f26ea02ea84d2b67c6" prot="package" virt="non-virtual"><scope>ES3</scope><name>Deserialize</name></member>
      <member refid="classES3_1ac8f17369c867d72b27d1849c122a9677" prot="public" virt="non-virtual"><scope>ES3</scope><name>Deserialize&lt; T &gt;</name></member>
      <member refid="classES3_1a1562650d48a90348bd45df57c8346c43" prot="public" virt="non-virtual"><scope>ES3</scope><name>DeserializeInto&lt; T &gt;</name></member>
      <member refid="classES3_1a5b6ee5188f250ddeb1b38235cdb7cfdc" prot="public" virt="non-virtual"><scope>ES3</scope><name>DeserializeInto&lt; T &gt;</name></member>
      <member refid="classES3_1a7c02be67695502ca146c685e9a0ea5a8" prot="public" virt="non-virtual"><scope>ES3</scope><name>Directory</name></member>
      <member refid="classES3_1a2a44b91e3315e24c98665de92d3f03da" prot="public" virt="non-virtual"><scope>ES3</scope><name>DirectoryExists</name></member>
      <member refid="classES3_1a83a8febb18104d0a5a448bbd0c21ec5c" prot="public" virt="non-virtual"><scope>ES3</scope><name>DirectoryExists</name></member>
      <member refid="classES3_1a92bb228b17f4c32439f3abf01056851b" prot="public" virt="non-virtual"><scope>ES3</scope><name>DirectoryExists</name></member>
      <member refid="classES3_1a14332f50a81aec36d2bee586ecc65325" prot="public" virt="non-virtual"><scope>ES3</scope><name>EncryptBytes</name></member>
      <member refid="classES3_1ac30ca75597eaa08ba4827423ca65baac" prot="public" virt="non-virtual"><scope>ES3</scope><name>EncryptionType</name></member>
      <member refid="classES3_1a09e38c01655acaa09aa9b258e592f010" prot="public" virt="non-virtual"><scope>ES3</scope><name>EncryptString</name></member>
      <member refid="classES3_1a248c68f2b255ae21a240540630889142" prot="public" virt="non-virtual"><scope>ES3</scope><name>FileExists</name></member>
      <member refid="classES3_1a0f131e83e01f8d15f74c22c40df74202" prot="public" virt="non-virtual"><scope>ES3</scope><name>FileExists</name></member>
      <member refid="classES3_1a84e229a88db9aca360e0ba2076cae1fe" prot="public" virt="non-virtual"><scope>ES3</scope><name>FileExists</name></member>
      <member refid="classES3_1a16e3194ce764f22a59a314e606e9cd15" prot="public" virt="non-virtual"><scope>ES3</scope><name>FileExists</name></member>
      <member refid="classES3_1a7c1a910fd4d27d33feea6cba79c61c76" prot="public" virt="non-virtual"><scope>ES3</scope><name>Format</name></member>
      <member refid="classES3_1a543ec50b060c1454e530c49ff5b30c09" prot="public" virt="non-virtual"><scope>ES3</scope><name>GetDirectories</name></member>
      <member refid="classES3_1a4da2942523313a413133d67aaf2e88be" prot="public" virt="non-virtual"><scope>ES3</scope><name>GetDirectories</name></member>
      <member refid="classES3_1adf7b81ae7fee3eac01aea1ccbd97e4e1" prot="public" virt="non-virtual"><scope>ES3</scope><name>GetDirectories</name></member>
      <member refid="classES3_1a26b1b7b528ae254235c8ddc23070a57e" prot="public" virt="non-virtual"><scope>ES3</scope><name>GetDirectories</name></member>
      <member refid="classES3_1a6501d17e4b57287c7f81645168540dfa" prot="public" virt="non-virtual"><scope>ES3</scope><name>GetFiles</name></member>
      <member refid="classES3_1ae4af20ce4e506177cc4f6c334c0381fd" prot="public" virt="non-virtual"><scope>ES3</scope><name>GetFiles</name></member>
      <member refid="classES3_1a426e42ee64b8dde2bac3801a4d76e490" prot="public" virt="non-virtual"><scope>ES3</scope><name>GetFiles</name></member>
      <member refid="classES3_1add732c9e2fadeed88c8c70147f0ac1a0" prot="public" virt="non-virtual"><scope>ES3</scope><name>GetFiles</name></member>
      <member refid="classES3_1a691ca13d1a7ca987187710d3d3c616b2" prot="public" virt="non-virtual"><scope>ES3</scope><name>GetKeys</name></member>
      <member refid="classES3_1ab10fa3ead9d55468b82314f84069ce35" prot="public" virt="non-virtual"><scope>ES3</scope><name>GetKeys</name></member>
      <member refid="classES3_1a5b9daf3f38281180f2a8a430e1be60e9" prot="public" virt="non-virtual"><scope>ES3</scope><name>GetKeys</name></member>
      <member refid="classES3_1a5eaa2a6725e6a0b7bd96c35ac6fc16c9" prot="public" virt="non-virtual"><scope>ES3</scope><name>GetKeys</name></member>
      <member refid="classES3_1ae5a6f9c1e4669c4df16af944e719bfbc" prot="public" virt="non-virtual"><scope>ES3</scope><name>GetTimestamp</name></member>
      <member refid="classES3_1af318a025820976eda8dd794c0be53b48" prot="public" virt="non-virtual"><scope>ES3</scope><name>GetTimestamp</name></member>
      <member refid="classES3_1a2d073f237aa6c1f1c22c2f68d53d16b2" prot="public" virt="non-virtual"><scope>ES3</scope><name>GetTimestamp</name></member>
      <member refid="classES3_1aadaa9fbe1f6c05e670f7f3c59b160546" prot="public" virt="non-virtual"><scope>ES3</scope><name>GetTimestamp</name></member>
      <member refid="classES3_1acd8f6881ebfc5b079c272d40b41c914e" prot="public" virt="non-virtual"><scope>ES3</scope><name>ImageType</name></member>
      <member refid="classES3_1a3e93b58ba7eb63bcd4ddd4471f577b37" prot="public" virt="non-virtual"><scope>ES3</scope><name>Init</name></member>
      <member refid="classES3_1a6375e28a1f61fb3f3484b68823ed3262" prot="public" virt="non-virtual"><scope>ES3</scope><name>KeyExists</name></member>
      <member refid="classES3_1ad25a691c8bacf39d440f20f0550cf619" prot="public" virt="non-virtual"><scope>ES3</scope><name>KeyExists</name></member>
      <member refid="classES3_1abe520d79328153a1a569a74e26df7314" prot="public" virt="non-virtual"><scope>ES3</scope><name>KeyExists</name></member>
      <member refid="classES3_1a770b880c09645903cf787887ba59f7d1" prot="public" virt="non-virtual"><scope>ES3</scope><name>KeyExists</name></member>
      <member refid="classES3_1ae103055acd5867d23ee3008e9b03c650" prot="public" virt="non-virtual"><scope>ES3</scope><name>Load</name></member>
      <member refid="classES3_1a615ebe09c1f71227e9e78593db669b93" prot="public" virt="non-virtual"><scope>ES3</scope><name>Load</name></member>
      <member refid="classES3_1ab2b0a323b9a4f801b0c8043060580b74" prot="public" virt="non-virtual"><scope>ES3</scope><name>Load</name></member>
      <member refid="classES3_1a88131ddf4d3eb474c2676d718c13e2ba" prot="public" virt="non-virtual"><scope>ES3</scope><name>Load</name></member>
      <member refid="classES3_1a171f7170770870518f60a9b4af6654a4" prot="public" virt="non-virtual"><scope>ES3</scope><name>Load</name></member>
      <member refid="classES3_1af6d41d61fea898f81b752cbbbe8d39a8" prot="public" virt="non-virtual"><scope>ES3</scope><name>Load</name></member>
      <member refid="classES3_1a4622468634556ca37b180fede089569a" prot="public" virt="non-virtual"><scope>ES3</scope><name>Load</name></member>
      <member refid="classES3_1a6668e3890a9aa150919f5de03f68cca0" prot="public" virt="non-virtual"><scope>ES3</scope><name>Load</name></member>
      <member refid="classES3_1a6b869b10a88a19bf9da791409a6b6f05" prot="public" virt="non-virtual"><scope>ES3</scope><name>Load&lt; T &gt;</name></member>
      <member refid="classES3_1a4cb48ec7db6b60037aa2e92eb71592b0" prot="public" virt="non-virtual"><scope>ES3</scope><name>Load&lt; T &gt;</name></member>
      <member refid="classES3_1ace5df18f23ae273155e5cbc0834f75bc" prot="public" virt="non-virtual"><scope>ES3</scope><name>Load&lt; T &gt;</name></member>
      <member refid="classES3_1a2ca126385d0ead1e03e6f9e9639afba5" prot="public" virt="non-virtual"><scope>ES3</scope><name>Load&lt; T &gt;</name></member>
      <member refid="classES3_1a2d76f99c5cdcca4aacfcab5dbe375437" prot="public" virt="non-virtual"><scope>ES3</scope><name>Load&lt; T &gt;</name></member>
      <member refid="classES3_1a78a05d3108f32ca5b917b16bff6a3d1a" prot="public" virt="non-virtual"><scope>ES3</scope><name>Load&lt; T &gt;</name></member>
      <member refid="classES3_1a51bec5dde60b86559d4f9131482644ec" prot="public" virt="non-virtual"><scope>ES3</scope><name>Load&lt; T &gt;</name></member>
      <member refid="classES3_1adeea8b58bb9c869179e90fb49aa72deb" prot="public" virt="non-virtual"><scope>ES3</scope><name>Load&lt; T &gt;</name></member>
      <member refid="classES3_1a4fbae859a155d31d6d0a2a442658bbe4" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadAudio</name></member>
      <member refid="classES3_1aac20818fac486aa739d4789ac7b77c8b" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadAudio</name></member>
      <member refid="classES3_1a312edb7789ae24f94a043bc27d16fe21" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadImage</name></member>
      <member refid="classES3_1a864b245bab2b2155307cdf260c499bfe" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadImage</name></member>
      <member refid="classES3_1a1fa3d9ef535e4e6d9696c1c9f2e6dd27" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadImage</name></member>
      <member refid="classES3_1a8d7eb011865db61cd792fc5fd1f48ef3" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadImage</name></member>
      <member refid="classES3_1a1f7893973bc2665fe97512be2e8f68c4" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadInto</name></member>
      <member refid="classES3_1a17fdd0037295f4538d5c901e6078673d" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadInto</name></member>
      <member refid="classES3_1a04828c0c945bfba0d585d3018366813b" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadInto</name></member>
      <member refid="classES3_1aff57d6abe84e4b001bae59ddc9ea7ceb" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadInto&lt; T &gt;</name></member>
      <member refid="classES3_1a5c9f255a90cd4a8fdc9522ff7e0e2216" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadInto&lt; T &gt;</name></member>
      <member refid="classES3_1a93b50f631486a9b27c41e7113a6a6aa1" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadInto&lt; T &gt;</name></member>
      <member refid="classES3_1a8b9ea398af360b83d8057e92c8f0ce22" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadInto&lt; T &gt;</name></member>
      <member refid="classES3_1a9e9b661927a3aec2d697a51e636dc2b3" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadInto&lt; T &gt;</name></member>
      <member refid="classES3_1a5ffd0b12e24d6a33c7bd22e0e8ca149c" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadRawBytes</name></member>
      <member refid="classES3_1ad91b4a9e9f28c6ef447dee2a375a8ecf" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadRawBytes</name></member>
      <member refid="classES3_1a81ae0bbf85afa2a38f5bde614074a8a3" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadRawBytes</name></member>
      <member refid="classES3_1abbc359ef4bb045756f28cc657f8676ea" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadRawBytes</name></member>
      <member refid="classES3_1a7f1480b5c018edb381218a51b2a8644c" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadRawString</name></member>
      <member refid="classES3_1ad8093c165a7ee2fce2e153eb9e858a40" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadRawString</name></member>
      <member refid="classES3_1ab25b09c29ab26468773638915a9782ac" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadRawString</name></member>
      <member refid="classES3_1a7d8ab92dcf67076c015e1cb9cbea915a" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadRawString</name></member>
      <member refid="classES3_1aa732dc418836c69edea3c5bc352d9324" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadString</name></member>
      <member refid="classES3_1abd868f34bcc08125b977c2afcda170aa" prot="public" virt="non-virtual"><scope>ES3</scope><name>LoadString</name></member>
      <member refid="classES3_1a3b3664cb28e141ac06622c5c704a7dab" prot="public" virt="non-virtual"><scope>ES3</scope><name>Location</name></member>
      <member refid="classES3_1af062fdcc4fd8f2bf3af434d6fde00e02" prot="public" virt="non-virtual"><scope>ES3</scope><name>ReferenceMode</name></member>
      <member refid="classES3_1a44650d507fe6dcce4b7d975cef2a06a7" prot="public" virt="non-virtual"><scope>ES3</scope><name>RenameDirectory</name></member>
      <member refid="classES3_1a3599816abfce762fc647b0812c4dfffa" prot="public" virt="non-virtual"><scope>ES3</scope><name>RenameDirectory</name></member>
      <member refid="classES3_1a1f08959e0798cb2109999c0a76a4d008" prot="public" virt="non-virtual"><scope>ES3</scope><name>RenameDirectory</name></member>
      <member refid="classES3_1a978f401aa26462fd78ebdb7888584789" prot="public" virt="non-virtual"><scope>ES3</scope><name>RenameFile</name></member>
      <member refid="classES3_1a6cf64a60a5b805debde982e6a3d3cf2f" prot="public" virt="non-virtual"><scope>ES3</scope><name>RenameFile</name></member>
      <member refid="classES3_1a2cbe7b9dab34be812292b51fbefe981a" prot="public" virt="non-virtual"><scope>ES3</scope><name>RenameFile</name></member>
      <member refid="classES3_1a3d6a37d45b1eb84b54a4aa3b41a72325" prot="public" virt="non-virtual"><scope>ES3</scope><name>RestoreBackup</name></member>
      <member refid="classES3_1a5269ac9e9108e05fa9bb65186ac52bcc" prot="public" virt="non-virtual"><scope>ES3</scope><name>RestoreBackup</name></member>
      <member refid="classES3_1a05d1e47a259d390de967cd0c9bb3374c" prot="public" virt="non-virtual"><scope>ES3</scope><name>RestoreBackup</name></member>
      <member refid="classES3_1aa0c98e77dac7b3d8f2d0f06efe34c2c2" prot="public" virt="non-virtual"><scope>ES3</scope><name>Save</name></member>
      <member refid="classES3_1aef1bbb11ef3a4534442accc3124c7b23" prot="public" virt="non-virtual"><scope>ES3</scope><name>Save</name></member>
      <member refid="classES3_1a09fd942bd6392028fd3749531b2026dd" prot="public" virt="non-virtual"><scope>ES3</scope><name>Save</name></member>
      <member refid="classES3_1a8e47754af46a6b80d10fa84ffb3b6e90" prot="public" virt="non-virtual"><scope>ES3</scope><name>Save</name></member>
      <member refid="classES3_1a58053e1d1acf2f9f044235aee1735efc" prot="public" virt="non-virtual"><scope>ES3</scope><name>Save&lt; T &gt;</name></member>
      <member refid="classES3_1a8e913c8e908373525526f9984882820c" prot="public" virt="non-virtual"><scope>ES3</scope><name>Save&lt; T &gt;</name></member>
      <member refid="classES3_1a45f712a09ef55f5d180e5810aabe24cd" prot="public" virt="non-virtual"><scope>ES3</scope><name>Save&lt; T &gt;</name></member>
      <member refid="classES3_1ab2c102f86a0b83baff86aa2d0fe87953" prot="public" virt="non-virtual"><scope>ES3</scope><name>Save&lt; T &gt;</name></member>
      <member refid="classES3_1ae30961fd88a6b9c636c4ad613643f114" prot="public" virt="non-virtual"><scope>ES3</scope><name>SaveImage</name></member>
      <member refid="classES3_1ae3045cd199b1fd4ef03e795dc2fd9124" prot="public" virt="non-virtual"><scope>ES3</scope><name>SaveImage</name></member>
      <member refid="classES3_1a32fa897dd9bc78251e5c77e56bdb07b9" prot="public" virt="non-virtual"><scope>ES3</scope><name>SaveImage</name></member>
      <member refid="classES3_1afbd385f1a30708796ed508f8accdae8e" prot="public" virt="non-virtual"><scope>ES3</scope><name>SaveImage</name></member>
      <member refid="classES3_1a895ab71d4ee415f8bd5f05f69ab45736" prot="public" virt="non-virtual"><scope>ES3</scope><name>SaveImage</name></member>
      <member refid="classES3_1ae9f24d279bf249e9d4e38a15289c3ca1" prot="public" virt="non-virtual"><scope>ES3</scope><name>SaveImage</name></member>
      <member refid="classES3_1a1584b0292679d351ef6be4e63cc62fb6" prot="public" virt="non-virtual"><scope>ES3</scope><name>SaveImageToBytes</name></member>
      <member refid="classES3_1a1b898fa70f361df94be9ed0ab9bcc942" prot="public" virt="non-virtual"><scope>ES3</scope><name>SaveRaw</name></member>
      <member refid="classES3_1a8512f6c2bf10ea97dfc1b23848f88fe8" prot="public" virt="non-virtual"><scope>ES3</scope><name>SaveRaw</name></member>
      <member refid="classES3_1a940373f7fda22c812b9914a11c7b28b4" prot="public" virt="non-virtual"><scope>ES3</scope><name>SaveRaw</name></member>
      <member refid="classES3_1ae53e2139837201ad6ed55bf8e38b0611" prot="public" virt="non-virtual"><scope>ES3</scope><name>SaveRaw</name></member>
      <member refid="classES3_1afbe65fa6a3ee6d34f6deeee2fc6f6edd" prot="public" virt="non-virtual"><scope>ES3</scope><name>SaveRaw</name></member>
      <member refid="classES3_1adde48288b025aef9a954cbddec99c0ee" prot="public" virt="non-virtual"><scope>ES3</scope><name>SaveRaw</name></member>
      <member refid="classES3_1abdb2a76e431790449149993de079350b" prot="public" virt="non-virtual"><scope>ES3</scope><name>SaveRaw</name></member>
      <member refid="classES3_1aac90c91f0760f1112681afc96bcae655" prot="public" virt="non-virtual"><scope>ES3</scope><name>SaveRaw</name></member>
      <member refid="classES3_1aef2e80a3b0fe4b12c2915125dd2269aa" prot="package" virt="non-virtual"><scope>ES3</scope><name>Serialize</name></member>
      <member refid="classES3_1a9b185633000d7117bb979dabed870730" prot="public" virt="non-virtual"><scope>ES3</scope><name>Serialize&lt; T &gt;</name></member>
      <member refid="classES3_1af49b451837178d9ff0086e6d84cc7884" prot="public" virt="non-virtual"><scope>ES3</scope><name>StoreCachedFile</name></member>
      <member refid="classES3_1ad9ad8b24ede06ac4bc131b81c3d5bbd6" prot="public" virt="non-virtual"><scope>ES3</scope><name>StoreCachedFile</name></member>
      <member refid="classES3_1a557d9f90d2cda899b352e5309db6c60f" prot="public" virt="non-virtual"><scope>ES3</scope><name>StoreCachedFile</name></member>
      <member refid="classES3_1aeb30cc4c0196887d11fce5ca6b7afcf4" prot="public" virt="non-virtual"><scope>ES3</scope><name>StoreCachedFile</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
